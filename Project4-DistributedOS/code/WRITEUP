------------------------------------------------------------------------------------------------------------------
Title : Writeup for Assignment 4: Distributed Movie Theater, Fall 2011
------------------------------------------------------------------------------------------------------------------
---------------------------
Date Submitted : 11/21/2011
---------------------------
-------------------------------------------------------------------------------------------------
 Group Num 51:		Name			Email			Student ID
-------------------------------------------------------------------------------------------------
			Aniket Zamwar		zamwar@usc.edu		1488561698
			Abhishek Prabhudesai	prabhude@usc.edu	4722594988 
			Javed Lalani		jlalani@usc.edu		6606908318 
--------------------------------------------------------------------------------------------------

                                      
***********************************************************************************************************************************************************
I. Requirements:
***********************************************************************************************************************************************************
-------------------------------------------------
The three parts of the project are as under:
-------------------------------------------------
--------------------------------------------------------------------------
Part 1) Single Server - Multiple Clients Movie Stimulation Implementation
--------------------------------------------------------------------------
We need to implement movie stimulation using the distributed systems developed in Project 3 - Part 3. In part 1 of this projects we will have different entities of movie stimulation acting as different clients and working mutual exclusively 
by requesting the required Locks/CVs and MVs to single server. The requirement of this part is that the entities like manager, movie technician, ticket taker, ticket clerk, concession clerk, head customers and group members
access the resources by requesting to user and expanding the movie stimulaton to completition with movie shows.

As there is only one server, all the requests go to one server and all the resources are handled by that single server.
Implementation of Requests and responses is implemented using postOffice's send and receive function. Each entity of the movie stimuation is assigned a specific unique identity which is Machine ID in nachos and each entity nachos also is assigned a specific mail Box number where it receives response message sent by server.
Server is also assigned a machine ID and mail Box where it is communicated.

---------------------------------------------------------------------------
Part 2)Multiple Server - Multiple Clients Movie Stimulation Implementation
---------------------------------------------------------------------------
This implementation consists of multiple servers where each entity of movie stimulation acting as a client sends request for particular resource to be used.
As there are multiple servers(minimum 1 server and maximum 5 servers) to be used in this part, consistency of resources to be created and proper communication needs to be implemented between the servers to check the availability of each resource requested by the server before providing the client who requested with a response.
If it is a create request by the client i.e. movie stimulation entity, the server before creating the resource for the request needs to check with other server entities the same entity is created elsewhere. As we have many clients in one nachos program, each client is uniqely identified by its mail box as well as machine id.

All the entities of movie stimulation interact with each other by using the resources allocated at the different servers.

---------------------------------------------------------------------------
Part 3)<Extra Credit> Implement Election Algorithm (Ring Algorithm):
---------------------------------------------------------------------------
The extra credit is implementation where the server needs to check if the client machine is avaliable or dead. This is done by having a thread infinitely listening on client machine at a particular mail Box. We have a timer interrupt on server machine send message to client thread and if the sending of message fails, the server 
declares that client as dead and releases all the resources that were allocated to that particular client machine.


***********************************************************************************************************************************************************
II. Assumptions:
***********************************************************************************************************************************************************
	===============================================================
	<*> Change NumPhysPages to 8000  (defined in machine/machine.h)  |
	===============================================================
	<Professor mentioned that it will be commented out for testing purpose by default>
	<+> machine/network.cc --> Line No. 112 one condtition would be commented out (As mentioned by professor)
		condition is:-> hdr.from == ident
	
	<+> For servers running the command:
		nachos -m [0-4] -s [-T1/-T2/-T3] [number of servers]
		
	<+> For Client Machines:
		nachos -m [>=5] -x ../test/[TestcaseFileName] [-T1/-T2/-T3] [number of servers]
	
	<+> Number of servers and T1/T2/T3 must be same for a particular scenario for correct working of the distributed system model developed.
	
	* Server is assumed to run at machine ID [0-4].
		-Server receives requests from client machines on Mail Box 0
		-Server communicates with other servers on mail Box 1
	
	* Server never stops and always waits for client to request.
	* Max MailBox - per nachos machine is 100
	
	* Monitor variables are assumed to be integer arrays eith maximum size 100.
	* The MV/CV/Lock names can only be alphanumeric.
	* The maximum of 150 MV/CV/Lock each can be created on server.
	* The maximum size of MV/CV/Lock names is 22 chars.
	* Server can provide maximum 150 of each Lock/MV/CV resources to its clients.
	* Client requesting the resource with same name is considered as shared resource and is shared between the clients.
	* Client Accesses the resources using the resource name.
	
***********************************************************************************************************************************************************
III. Design:
***********************************************************************************************************************************************************
----------------------------------------------------------------------------------------------------------------------
	Part 1) Single Server - Multiple Clients Movie Stimulation Implementation
----------------------------------------------------------------------------------------------------------------------
Design:

In this we implement new system calls at client system where the system call handler calls the system call and sends a request to server with proper message.
We have designed a format of Message for sending the message to Server which tells server about the request.

We have designated alphabets 'a' to 'm' to each system call to be implemented at server. This alphabet is the first byte in the message and trailing to this alphabet is the furthur information.
The Message Formats for each system call is as under which is prepared at client and sent to server:

1.  Create Lock:  	Message:	'a' + Lock Name
2.  AcquireLock:  	Message: 	'b' + Lock Name
3.  ReleaseLock:  	Message: 	'c' + Lock Name
4.  DeleteLock:		Message:	'd' + Lock Name
5.  Create CV:		Message:	'e' + CV Name
6.  Wait:		Message:	'f' + CV Name + ',' + Lock Name
7.  Signal:		Message:	'g' + CV Name + ',' + Lock Name
8.  Broadcast:		Message:	'h' + CV Name + ',' + Lock Name
9.  Delete CV:		Message:	'i' + CV Name
10. Create MV:		Message:	'j' + MV Name + ',' +  size of MV
11. Set Value:		Message:	'k' + MV Name + ',' + index + ',' + value
12. Get Value:		Message:	'l' + MV Name + ',' + index
13. Delete MV:		Message:	'm' + MV Name

Description: The server parses the message received from the client which must adhere to the format mentioned above. The server checks ths first byte of character and then calls the specific system call and provides it with the furthur message contents.
The system calls perform proper validations on the message contents and then 'may' provide the client with a reply.
In our system, as client and server threads are completely on different systems, no scheduler or thread sleep  comes into picture. But, the client goes into wait when it calles postOffice -> receive() call, and is waiting until it gets some reply from the server. 

+ Structures used at Server machine for providing the client with the resources.
-----------------------------------------
int serverLockIDCounter = 1;
struct Serverlock{
	char* lockName;
	bool isToBeDeleted;
	List* messageQueue;
	List* destMachineIDQueue;
	LockStatus lockStatus;
	int lockOwner;
	int useCount;
};
Serverlock serverLockTable[MAX_SERVER_LOCKS];

/*
*	Condition Variables Structure and Table
*/
int serverCVIDCounter = 1;
struct ServerCV{
	char *cvName;
	bool isToBeDeleted;
	List *messageWaitQueue;
	List *destMachineIDQueue;
	int waitLock;
	int waitQueueCount;
	int useCount;
};
ServerCV serverCVTable[MAX_SERVER_CV];

/*
*	Monitor Variables Structure and Table
*/
int serverMVIDCounter = 1;
struct ServerMV{
	char* mvName;
	int* mv;
	int size;
	int useCount;
};
ServerMV serverMVTable[MAX_SERVER_MV];
-----------------------------------------
+ ALGORITHMS:

A. Create Lock:
	
	Start CreateLock (char *LockName)
			Validate LockName
			for(int i=1; i < serverLockIDCounter; i++){
				if(serverLockTable[i].lockName != NULL){
					if(strcmp(serverLockTable[i].lockName,LockName) == 0){
						sprintf(ack,"%d",i);
						printf("\nLock Found already Created");
						serverLockTable[i].useCount++;
						return;
					}
				}
			}
			if(serverLockIDCounter >= MAX_SERVER_LOCKS){
				strcpy(ack,"-1Lock Full\0");
				return;
			}
			serverLockTable[serverLockIDCounter].lockName = new char[31];
			strcpy(serverLockTable[serverLockIDCounter].lockName,LockName);
			serverLockTable[serverLockIDCounter].isToBeDeleted = false;
			serverLockTable[serverLockIDCounter].lockStatus = FREE;
			serverLockTable[serverLockIDCounter].lockOwner = 0;
			serverLockTable[serverLockIDCounter].useCount = 1;
			serverLockTable[serverLockIDCounter].messageQueue = new List;
			serverLockTable[serverLockIDCounter].destMachineIDQueue = new List;
			sprintf(ack,"%d",serverLockIDCounter);
			printf("\n%s Length: %d\n",ack,strlen(ack));
			serverLockIDCounter++;
			return;
	End CreateLock

B. Acquire Lock

	Start AcquireLock (int machineId, char *LockName)
			Validate char *LockName
			Validate Machine ID
			if(serverLockTable[lock_ID].lockOwner == machineId){
				strcpy(ack,"1\0");
				return 1;
			}
			if(serverLockTable[lock_ID].lockStatus == FREE){
				serverLockTable[lock_ID].lockStatus = BUSY;
				serverLockTable[lock_ID].lockOwner = machineId;
			}
			else{
				message = new char[50];
				strcpy(message,"1\0");
				toAddr = new int;
				*toAddr = machineId;
				serverLockTable[lock_ID].messageQueue -> Append((void *)message);			// Add the message to the wait queue if the lock is not available
				serverLockTable[lock_ID].destMachineIDQueue -> Append((void *)toAddr);
				printf("Add %d to wait queue\n",*toAddr);
				return 0;
			}
			strcpy(ack,"1\0");
			return 1;
	End AcquireLock 

C: Release Lock:

	Start ReleaseLock
			Validate Machine ID and char *LockName
			if(serverLockTable[lock_ID].lockOwner != machineId)
				strcpy(ack,"-1NotLockOwner\0");
				return 1;
			end if
			if(!(serverLockTable[lock_ID].messageQueue -> IsEmpty())){
				int *machIdPtr;
				char *messPtr;
				machIdPtr = (int *)serverLockTable[lock_ID].destMachineIDQueue -> Remove();		// Remove the machine id from the wait queue
				messPtr = (char *)serverLockTable[lock_ID].messageQueue -> Remove();			// Remove the message from the message wait queue
				serverLockTable[lock_ID].lockOwner = *machIdPtr;
				printf("\nFound %d in Lock wait queue\n",*machIdPtr);
				sendMessage(*machIdPtr,messPtr);
			}
			else{
				serverLockTable[lock_ID].lockStatus = FREE;
				serverLockTable[lock_ID].lockOwner = 0;
			}
			strcpy(ack,"1\0");
			return 1;
	End ReleaseLock

D: Delete Lock:
		
		Start DeleteLock(char *LockName)
			Validate char *LockName
			if(!(serverLockTable[lockId].messageQueue -> IsEmpty())){
				serverLockTable[lockId].isToBeDeleted = true;
				strcpy(ack,"1\0");
				return 1;
			}

			serverLockTable[lockId].useCount--;
			if(serverLockTable[lockId].useCount == 0){
				serverLockTable[lockId].lockName = NULL;
				serverLockTable[lockId].lockOwner = 0;
				delete serverLockTable[lockId].messageQueue;
				delete serverLockTable[lockId].destMachineIDQueue;
			}
			strcpy(ack,"1\0");
			return 1;
		End DeleteLock
		
E: Create CV:
		
		Start CreateCV (CVName)
			Validate CV Name
			for(int i=1; i < serverCVIDCounter; i++){
				if(serverCVTable[i].cvName != NULL){
					if(strcmp(serverCVTable[i].cvName,CVName) == 0){
					sprintf(ack,"%d",i);
					serverCVTable[i].useCount++;
					return;
					}
				}
			}
			if(serverCVIDCounter >= MAX_SERVER_CV){
				strcpy(ack,"-1Lock Full\0");
				return;
			}

			serverCVTable[serverCVIDCounter].cvName = new char[31];
			strcpy(serverCVTable[serverCVIDCounter].cvName,CVName);
			serverCVTable[serverCVIDCounter].isToBeDeleted = false;
			serverCVTable[serverCVIDCounter].messageWaitQueue = new List;
			serverCVTable[serverCVIDCounter].destMachineIDQueue = new List;
			serverCVTable[serverCVIDCounter].waitLock = 0;
			serverCVTable[serverCVIDCounter].useCount = 1;
			serverCVTable[serverCVIDCounter].waitQueueCount = 0;
			sprintf(ack,"%d",serverCVIDCounter);
			printf("\n%s Length: %d\n",ack,strlen(ack));
			serverCVIDCounter++;
			return;
		End CreateCV
		
F: Wait RPC Call
		
			Start WaitServer (Lock Name,CV Name)
				Validate Lock Name and CV Name
				//Check if current thread has acquired the lock
				if(!(isHeldByCurrentThread(machineId,lockid)))
				{
					printf("%d does not has the lock %d", machineId,lockid);
					strcpy(ack,"-1NotLockOwner\0");
					return 1;
				}
				printf("\nCheck serverCVTable[cvid].waitLock %d, cvid %d \n",serverCVTable[cvid].waitLock,cvid);
				//First Thread with conditionLock calling wait
				if(serverCVTable[cvid].waitLock == 0)
					serverCVTable[cvid].waitLock = lockid;

				//waitLock and conditionLock do not match
				if(serverCVTable[cvid].waitLock != lockid){
					printf("\n%d cannot wait for condition as condition Lock is not same as waitLock \n",machineId);
					//enable interrupts
					strcpy(ack,"-1InvalidLock\0");
					return 1;
				}
				printf("\nCheck serverCVTable[cvid].waitLock %d, cvid %d \n",serverCVTable[cvid].waitLock,cvid);
				ReleaseLock(machineId,lockid);

				// add the current thread to condition variable's wait queue
				message = new char[50];
				strcpy(message,"1\0");
				toAddr = new int;
				*toAddr = machineId;
				
				serverCVTable[cvid].messageWaitQueue -> Append((void *)message); // Add the message to the wait queue
				serverCVTable[cvid].destMachineIDQueue -> Append((void *)toAddr); // Add the machine id to the wait queue
				return 0;					
			End Wait

G: Signal Server
		
		Start Signal(Lock Name ,CV Name)
			Validate Lock Name and CV Name
			//Check if current thread has acquired the lock
			if(!(isHeldByCurrentThread(machineId,lockid)))
			{
				printf("%d does not has the lock %d", machineId,lockid);
				strcpy(ack,"-1NotLockOwner\0");
				return 1;
			}
			if(serverCVTable[cvid].messageWaitQueue -> 	IsEmpty()){
				printf("%d signalled using %d, but no client waiting", machineId,lockid);
				strcpy(ack,"-1No client waiting");
				return 1;
			}

			//waitLock and conditionLock do not match
			if(serverCVTable[cvid].waitLock != lockid){
				printf("\n%d cannot wait for condition as condition Lock is not same as waitLock \n",machineId);
				strcpy(ack,"-1InvalidCVLock\0");
				return 1;
			}
			// Remove a message from the wait queue
			serverCVTable[cvid].messageWaitQueue -> Remove();
			
			if(serverCVTable[cvid].messageWaitQueue -> 	IsEmpty()){
				serverCVTable[cvid].waitLock = 0;
			}
			// Try to acquire the lock which is used for the signalling
			AcquireLock(*((int *)serverCVTable[cvid].destMachineIDQueue -> Remove()),lockid);				
			strcpy(ack,"1\0");
			return 1;
		
		End Signal
		
H: Broadcast:

		Start Broadcast(CV Name, Lock Name)
			Validate Lock Name and CV Name
			//Check if current thread has acquired the lock
			if(!(isHeldByCurrentThread(machineId,lockid))){
				printf("%d does not has the lock %d", machineId,lockid);
				strcpy(ack,"-1NotLockOwner\0");
				return 1;
			}
			//waitLock and conditionLock do not match
			if(serverCVTable[cvid].waitLock != lockid){
				printf("\n%d cannot wait for condition as condition Lock is not same as waitLock \n",machineId);
				strcpy(ack,"-1InvalidCVLock\0");
				return 1;
			}
			while(!(serverCVTable[cvid].messageWaitQueue -> IsEmpty())){
				SignalServerCV(machineId,mess);
			}
			return 1;
		End Broadcast

I: Delete CV

		Start DeleteCV(CV Name)
			Validate CV Name
			if(!(serverCVTable[cvId].messageWaitQueue -> IsEmpty()))
			{
				serverCVTable[cvId].isToBeDeleted = true;
				strcpy(ack,"1\0");
				return 1;
			}
			serverCVTable[cvId].useCount--;

			if(serverCVTable[cvId].useCount == 0)
			{
				serverCVTable[cvId].cvName = NULL;
				serverCVTable[cvId].waitLock = -1;
				serverCVTable[cvId].waitQueueCount = -1;
				delete serverCVTable[cvId].messageWaitQueue;
			}
			strcpy(ack,"1\0");
			return 1;
		End DeleteCV
		
J: Create Monitor Variable:

		Start CreateMV(MVName)
			Validate MVName
			for(int i=1; i < serverMVIDCounter; i++){
				if(serverMVTable[i].mvName != NULL){
					if(strcmp(serverMVTable[i].mvName,str1) == 0){
						sprintf(ack,"%d",i);
						serverMVTable[i].useCount++;
						return;
					}
				}
			}
			if(serverMVIDCounter >= MAX_SERVER_MV){
				strcpy(ack,"-1MV Full\0");
				return;
			}

			while(*mess != '\0'){
				if(*mess == '\n' || *mess == '\t' || index == 3 || (!(*mess >= 48 && *mess <= 57))){
					strcpy(ack,"-1MessageFormatInvalid\0");		//Check the validity of the argument # 2 - size of the monitor varialble
					return;
				}
				*(str2 + index) = *mess;
				index++;
				mess++;
			}
			*(str2 + index)='\0';
			if(atoi(str2) > 100){
				strcpy(ack,"-1MVSizeTooLarge\0");					//Check the validity of the argument # 1 - monitor variable name
				return;
			}
			serverMVTable[serverMVIDCounter].mvName = new char[31];
			strcpy(serverMVTable[serverMVIDCounter].mvName,str1);
			serverMVTable[serverMVIDCounter].size = atoi(str2);
			serverMVTable[serverMVIDCounter].mv = new int[atoi(str2)];
			serverMVTable[serverMVIDCounter].useCount = 1;
			sprintf(ack,"%d",serverMVIDCounter);
			serverMVIDCounter++;
			return;
		End CreateMV

K:	SetValue of MV

		Start SetValue(MV Name, Index, Value)
			Validate MV Name, Index, Value
			Store Value in MV[MVID].mv[Index]
		End SetValue

L: GetValue of MV:

		Start GetValue(MV Name, Index)
			Validate MV Name, Index
			Return Value in MV[MVID].mv[Index]
		End SetValue

M: Delete Monitor Variable:
		
		Start Delete MV(MV Name)
			Validate MV Name
			Delete MV from MV Table Structure
		End Delete MV
		
Handle Do You Have Messages:

		Check if the DYH is for a resource for which the server has sent a DYH to all other servers.
		
		This is done by calling find on the DYH requests map. If it returns a value then the key is found i.e. I have sent a DYH for the same resource.
		
			- If this DYH is for a Create<x> type of a request then check the timestamp attached with it. If the timestamp is greater then store the DYH. Else reply to the server saying "No".
			- If this DYH is for any other type of a request then reply "No" to the requesting server.
		
		If the server has not sent a DYH for the same resource, then check in the resource table. If found then reply back "Yes" along with the ID of the resource.
		Else reply saying "No".
		
Handle Yes Response:

		Parse the response.
		
		Check if all the responses to the DYH sent have been received.
		If Yes:
		Reply back to the client with the ID of the requested resource. In case of a Wait, Signal, Broadcast system call, the server first checks if the response is valid. If valid then the request id forwarded to the client owning the resource.
		
		If No:
		Store the information sent by the server in the DYH map so that it can be used when all responses are received, to forward the request to the appropriate server.

Handle No Response:
		
		Parse the response.
		
		Check if all the responses to the DYH sent have been received.
		If Yes:
			- Check if there was a "Yes" response for the DYH.
				If true:
				Forward the request to the appropriate server.
				
				If false:
				Reply back to the client - "wrong resource requested".
		
		If No:
		Decrease the reply count for the resource.
		
----------------------------------------------------------------------------------------------------------------------
	Part 2) Multiple Server - Multiple Clients Movie Stimulation Implementation
----------------------------------------------------------------------------------------------------------------------

Design:
For part 2 as we have multiple servers, we require DYH request messages to be send by server received a request to all other servers to check the avaliability of the requested resource before processing the request.
So, including the request messages from client to server, we have designed some DYH messages and the return reply message formats for communication between servers.

DYH Messages are sent to other servers if the resource is not availabe with the server who has received the request from client. Then the client waits for all the servers to reply back for the DYH Message to take a decision.
If all servers reply 'No' in case of Create Resource like CV, MV or Lock then the server itself creates the resource and replies back to the client.
if any one of the client, which in our case only one client will reply 'Yes' if it holds the resource, replies back for create type of DYH then the server replies back to client.
If in case of non-create type of DYH, if all servers reply 

1.  Create Lock:  	
		DYH Message:	'#' + 'a' + Lock Name ',' + timestamp
		Positive Reply:	'$' + 'a' + Lock Name + ',' + Lock Id
		Negative Reply:	'!' + 'a' + LockName + ',' + timestamp

2.  AcquireLock:  	
		DYH Message: 	'#' + 'b' + Lock Name
		Positive Reply:	'$' + 'a' + Lock Name + ',' + Lock Id
		Negative Reply:	'!' + 'a' + LockName

3.  ReleaseLock:  	
		DYH Message: 	'#' + 'c' + Lock Name
		Positive Reply:	'$' + 'a' + Lock Name + ',' + Lock Id
		Negative Reply:	'!' + 'a' + LockName

4.  DeleteLock:		
		DYH Message:	'#' + 'd' + Lock Name
		Positive Reply:	'$' + 'a' + Lock Name + ',' + Lock Id
		Negative Reply:	'!' + 'a' + LockName

5.  Create CV:		
		DYH Message:	'#' + 'e' + CV Name + ',' + TimeStamp
		Positive Reply:	'$' + 'e' + CV Name + ',' + CV Id
		Negative Reply:	'!' + 'e' + CV Name + ',' + timestamp

6.  Wait:			
		DYH for CV:	'#' + 'f' + CV Name
		Positive Reply:	'$' + 'f' + CV Name + ',' + CV Id
		Negative Reply:	'!' + 'f' + CV Name

		DYH for Lock:	'#' + 'x' + ',' + Lock Name + ',' + Requester's machineId + ',' + Requester's MailBox
		Positive Reply1:'$' + 'x' + Lock Name + ',' + Lock Id + ',' + '*'
			If lock is held by the requester, then '*' is concatinated to message
		
		Positive Reply2:'$' + 'x' + Lock Name + ',' + Lock Id + ',' + '+'
			If lock is not held by the requester, then '+' is concatinated to message
		
		Negative Reply:	'!' + 'x' + ',' + Lock Name

7.  Signal:			
		DYH for CV:	'#' + 'g' + CV Name
		Positive Reply:	'$' + 'g' + CV Name + ',' + CV Id
		Negative Reply:	'!' + 'g' + CV Name

		DYH for Lock	'#' + 'y' + ',' + Lock Name + ',' + Requester's machineId + ',' + Requester's MailBox
		Positive Reply1:'$' + 'y' + Lock Name + ',' + Lock Id + ',' + '*'
			If lock is held by the requester, then '*' is concatinated to message
		
		Positive Reply2:'$' + 'y' + Lock Name + ',' + Lock Id + ',' + '+'
			If lock is not held by the requester, then '+' is concatinated to message
		
		Negative Reply:	'!' + 'y' + ',' + Lock Name

8.  Broadcast:		
		
		DYH for CV:	'#' + 'h' + CV Name
		Positive Reply:	'$' + 'h' + CV Name + ',' + CV Id
		Negative Reply:	'!' + 'h' + CV Name

		DYH for Lock	'#' + 'w' + ',' + Lock Name + ',' + Requester's machineId + ',' + Requester's MailBox
		Positive Reply1:'$' + 'w' + Lock Name + ',' + Lock Id + ',' + '*'
			If lock is held by the requester, then '*' is concatinated to message
		Positive Reply2:'$' + 'w' + Lock Name + ',' + Lock Id + ',' + '+'
			If lock is not held by the requester, then '+' is concatinated to message
		Negative Reply:	'!' + 'w' + ',' + Lock Name

9.  Delete CV:		
		DYH Message:	'#' + 'i' + CV Name
		Positive Reply:	'$' + 'e' + CV Name + ',' + CV Id
		Negative Reply:	'!' + 'e' + CV Name

10. Create MV:		
		DYH Message:	'#' + 'j' + MV Name + ',' + size of MV + ',' + TimeStamp
		Positive Reply:	'$' + 'j' + MV Name + ',' + Mv Id
		Negative Reply:	'!' + 'j' + MV Name + ',' + TimeStamp

11. Set Value:		
		DYH Message:	'#' + 'l' + MV Name + ',' + index + ',' + value
		Positive Reply:	'$' + 'l' + MV Name + ',' + index + ',' + value
		Negative Reply:	'!' + 'l' + MV Name

12. Get Value:		
		DYH Message:	'#' + 'k' + MV Name + ',' + index
		Positive Reply:	'$' + 'k' + MV Name + ',' + index
		Negative Reply:	'!' + 'k' + MV Name

13. Delete MV:		
		DYH Message:	'#' + 'm' + MV Name
		Positive Reply:	'$' + 'm' + MV Name + ',' + Mv Id
		Negative Reply:	'!' + 'm' + MV Name

Create Request Logic: As there can be a condition where 2 servers get the create request at the same time, and so it is possible that both the servers reply a 'no' for DYH and 
both the servers create the resource which is invalid. To overcome such situation we came up with 'timestamp', the create DYH are queued in a queue until a decision is taken, if the timestamp of the 
DYH came is more than the DYH request that was sent by the server. While if the timestamp is smaller then the DYH is replied with a no.
Also there is case when 2 Create DYH can have same timestamp, in this case machine ID is compared to avoid the decision problem.

If a negative acknowledgement is received from all servers, in case of Create Request the resource is created and requester client is replied back, while if it is non create request and none of the servers
reply a positive ack for DYH, then the clieent is replied back with -1Error Message.



***********************************************************************************************************************************************************
IV. Implementation:
***********************************************************************************************************************************************************

+ Files Modified
	- nachos-csci402/code/Makefile.common
	- nachos-csci402/code/threads/main.cc
	- nachos-csci402/code/network/nettest.cc
	- nachos-csci402/code/userprog/exception.cc
	- nachos-csci402/code/userprog/syscall.h
	- nachos-csci402/code/test/start.s
	- nachos-csci402/code/network/Makefile
	- nachos-csci402/code/threads/system.cc
	- nachos-csci402/code/threads/system.h
	- nachos-csci402/code/threads/threads.cc
	- nachos-csci402/code/threads/threads.h

+ Files added
	+ Test Cases Added to test directory
		- nachos-csci402/code/test/distributedLocksTest.c
		- nachos-csci402/code/test/distributedLockAndCVTest_1.c
		- nachos-csci402/code/test/distributedLockAndCVTest_2.c
		- nachos-csci402/code/test/distributedLockAndCVAndMVTest_1.c
		- nachos-csci402/code/test/distributedLockAndCVAndMVTest_2.c
		- nachos-csci402/code/test/distributedLockAndCVAndMVTest_3.c
		- nachos-csci402/code/test/rpcTest1.c
		- nachos-csci402/code/test/rpcTest2.c
		- nachos-csci402/code/test/rpcTest3.c
		- nachos-csci402/code/test/rpcTest4.c
		- nachos-csci402/code/test/rpcTest5.c
		- nachos-csci402/code/test/specialTest_1.c
		- nachos-csci402/code/test/specialTest2_1.c
		- nachos-csci402/code/test/specialTest2_2.c
		- nachos-csci402/code/test/execSpecialTest_1.c
		- nachos-csci402/code/test/execSpecialTest2_1.c
		- nachos-csci402/code/test/execSpecialTest2_2.c
		- nachos-csci402/code/test/ticketClerk.c
		- nachos-csci402/code/test/concessionClerk.c
		- nachos-csci402/code/test/ticketTaker.c
		- nachos-csci402/code/test/headCustomer.c
		- nachos-csci402/code/test/groupMember.c
		- nachos-csci402/code/test/movieTechnician.c
		- nachos-csci402/code/test/movieManager.c
		- nachos-csci402/code/test/initializeSystem.c
		- nachos-csci402/code/test/execMovieEntity1.c
		- nachos-csci402/code/test/execMovieEntity2.c
		- nachos-csci402/code/test/execCustomers.c
		- nachos-csci402/code/test/distributednegativeTest_1.c
		- nachos-csci402/code/test/distributednegativeTest_2.c
		- nachos-csci402/code/test/distributednegativeTest_3.c
		- nachos-csci402/code/test/distributednegativeTest_4_1.c
		- nachos-csci402/code/test/distributednegativeTest_4_2.c
		- nachos-csci402/code/test/distributednegativeTest_5.c
		- nachos-csci402/code/test/pingTest1.c
		- nachos-csci402/code/test/pingTest2.c
		- nachos-csci402/code/test/pingTest3.c
		- nachos-csci402/code/test/pingTest4.c
		- nachos-csci402/code/test/pingTest5.c
		
	+ Files Added for Part 1 & 2 of the project
		- None
		
+ Data Structures added, and the file they were added to.
	+ Directory Name: nachos-csci402/code/network/nettest.cc
	
		struct myInfo{
			char *name;
			char type;
			int machineId[200];
			int mailbox[200];
			int mcIndex;
			int replyCount;
			char message[200][50];
			unsigned int timestamp;
			int reply;
			int recvmachineId[200];
			int recvmailbox[200];
			char recvtimestamp[200][20];
			int recvIndex;
			int posMachineId;
			int posMailbox;
			int resourceID;
			char waitLockState[1];
			int mcidInt;
			int mailbxInt;
		};

		myInfo *myInfoElement;
		typedef std::map<string,myInfo*> MAPTYPE;

		MAPTYPE pendReqMap;
		MAPTYPE pendDHYMap;
		MAPTYPE::iterator it;
		MAPTYPE::iterator itDYH;

		Lock *serverLockTableLock;
		Lock *serverCVTableLock;
		Lock *serverMVTableLock;
		Lock *pendReqMapLock;

	+ Directory Name: nachos-csci402/code/threads/threads.h
	+ Directory Name: nachos-csci402/code/threads/threads.cc
		
		#ifdef NETWORK
    			int myMailBox;
		#endif

+ Functions added and in which file
	
	Directory Name: nachos-csci402/code/network/nettest.cc
		Functions Added: 		
			- void getTimeStamp()
			-void setInfo(char *resourceName,char requestType,int requestorMachineId, int requestorMailBox,char *requestMessage,bool typ)
			- bool sendDYHMessage(char* DYHMessage)
			- int isLockWithMe(int machineId,int mailBox,char *LockName,char reqType)
			- int CreateLockResource(int machineId,int mailBox,char *LockName)
			- int isCVWithMe(int machineId,int mailBox,char *CVName,char reqType)
			- int CreateCVResource(int machineId,int mailBox,char *CVName)
			- int isMVWithMe(int machineId,int mailBox,char *MVName,char reqType,int index, int val)
			- int CreateMVResource(int machineId,int mailBox,char *mess)
			- int handleDYHRequest(char *reqType,int machineid, int mailboxno, char *msg)
			- int handleNoResponse(char *reqType,int machineid, int mailboxno, char *msg)
			- void MailBox1(int nouse)
			- void pingServer(int nouse)
			- void MailBox_0(int nouse)

		Functions Modified: 
			- void sendMessage(int to, char* toSendMessage)
			- void CreateServerLock(char *LockName)
			- int AcquireLock(int machineId, int lock_ID)
			- int ReleaseLock(int machineId, int lock_ID)
			- DeleteServerLock(machineId,atoi(mess1));
			- CreateServerCV(machineId,mess1);
			- WaitServerCV(machineId,mess1);
			- SignalServerCV(machineId,mess1);
			- BroadcastServerCV(machineId,mess1);
			- DeleteServerCV(machineId,atoi(mess1));
			- CreateMV(machineId,mess1);
			- SetValue(machineId,mess1);
			- GetValue(machineId,mess1);
			- DeleteServerMV(machineId,atoi(mess1));

***********************************************************************************************************************************************************
V. Testing:
***********************************************************************************************************************************************************

----------------------------------------------------------------------------------------------------------------------
	Test Cases For Part 1 - Movie Simulation: Only one server
----------------------------------------------------------------------------------------------------------------------
+ How to test : Needs 5 terminal windows
-----------------------------------------------------------
	Server: 
		-	nachos -m 0 -s -T1
	
	Clients: 
		1. Please run the initialize system, and donot execute the next entities until initialze gets over.
		- 	nachos -m 1 -x ../test/initializeSystem -T1
		
		2. Execute this command first after initialize gets over.
		-	nachos -m 3 -x ../test/execMovieEntity1 -T1

		3. Execute this entity after 'execMovieEntity1' is executed and it is in pause state
		-	nachos -m 4 -x ../test/execMovieEntity2 -T1
		
		4. Execute this entity after 5-6 seconds have elapsed running the 'execMovieEntity2'
		-	nachos -m 2 -x ../test/execCustomers -T1

----------------------------------------------------------------------------------------------------------------------
	Test Cases For Part 2 - Movie Simulation + Multiple Server/Multiple Client Test Cases
----------------------------------------------------------------------------------------------------------------------
(+) Various Test Cases to test the multiple server/multiple client working model.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Test Case 1 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Test Case 1: Test to basic working of Locks on distributed systems
		Explanation:	In this the client first creates the lock, acquires it, releases it and then deletes it.
	  
	  + How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
  				  vi. Now we run client 1
							nachos -m 5 -x ../test/distributedLocksTest -T2 5

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Test Case 2 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Test Case 2: Test to basic working of Condition Wait and Signal with Locks
		Explanation:	In this the client 1 first creates the lock and a condition, acquires the lock, and Waits on the condition. Client 2 creates the lock and condition with the same name and hence gets the same lockId and cvId that client 1 got from server. Then client 2 signals on the condition client 1 is waiting for, and releases the lock and deletes it, but nachos does not deletes the lock right away since it is also being used by client 1. On receiving signal from client 2, client 1 releases the lock and then deletes it.

	    + How to Run:
			A. Open 7 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
  				  vi. Now we run client 1
							nachos -m 5 -x ../test/distributedLockAndCVTest_1 -T2 5
				  vii.Now we run client 2
							nachos -m 6 -x ../test/distributedLockAndCVTest_2 -T2 5

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Test Case 3 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Test Case 3: Test to basic working of Condition Wait and Signal and Monitor Variables Get and Set with Locks 
		Explanation:	In this the client 1 first creates a lock, a condition and a monitor variable acquires the lock, sets monitor variable and then Waits on the condition. Client 2 creates the two locks, two condition variables and a monitor variable with the same name that client 1 got from server. Then client 2 check the monitor variable, set value and waits for client 3. Client 3 creates the lock, cv and monitor variable and sets the monitor variable and signals to client 2. Upon receiving signal from client 3, client 2 sets moniitor variable and signal to Client 1. Values of monitor variables will prove mutual exclusion and working of wait and signal

		+ How to Run:
			A. Open 8 Terminals: 
				  i.   First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii.  Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii. Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv.  Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.   Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
  				  vi.  Now we run client 1
							nachos -m 5 -x ../test/distributedLockAndCVAndMVTest_1 -T2 5
				  vii. Now we run client 2
							nachos -m 6 -x ../test/distributedLockAndCVAndMVTest_2 -T2 5
				  viii.Now we run client 3
							nachos -m 7 -x ../test/distributedLockAndCVAndMVTest_3 -T2 5
	
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Test Case 4 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Test Case 5: <Test Case which handles all the available funtionalities of resources provided by single server with distributed servers and 5 concurrent client machines>
		Explanation: This test case handles five Clients and five server. This test case helps us test the working of Lock Acquire Queue,CV Wait Queue, Monitor Variable Values Set and Get, also broadcast RPC Call, and also deletetion and sharing of all the resources among all the clients of all these resources.

		+ How to Run:
			A. Open 10 Terminals: 
				  i.   First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii.  Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii. Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv.  Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.   Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi.  Now we run client 1
							nachos -m 5 -x ../test/rpcTest1 -T2 5
				  vii. Now we run client 2
							nachos -m 6 -x ../test/rpcTest2 -T2 5
				  viii.Now we run client 3
							nachos -m 7 -x ../test/rpcTest3 -T2 5
				  ix.  Now we run client 4
							nachos -m 8 -x ../test/rpcTest5 -T2 5
				  x.   Now we run client 5
							nachos -m 9 -x ../test/rpcTest4 -T2 5


=============================================
(+) Negative Test Cases
=============================================
	>>	These Test Cases provide the tests where we handle the situations where server is bombarded with huge number of requests from client.
		Here the servers are throughly tested for distributed mutual exclusion.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
>SPECIAL SCENARIO Test Case <Test Case 6 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	>> Distributed Systems Special Test 1: This Test Case sends very large number of Create reqestes to the servers randomly choosen while sending the request. The server which receives the first create request will actually create the resource and use Total ordering so that others servers do not create the same resource.
		Explanation: This test case uses five servers and two cients. Each client execs 20 User Program, which send a create request to a server randomly choosen. so in all 40 creation requests will be sent to the server at the nearly same time and servers use total ordering(implemented using timestamps) so that only the server which first receives the request will create the resource.

		+ How to Run:
			A. Open 7 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi.Now we run client 1
							nachos -m 5 -x ../test/execSpecialTest_1 -T2 5
				  vii.Now we run client 2
							nachos -m 6 -x ../test/execSpecialTest_1 -T2 5

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
>SPECIAL SCENARIO Test Case <Test Case 7 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Special Test 2: This test case has a two simple user program one creates lock, cv and mv and waits on a condition and other program also creates the same and signals to program 1. Both this user program are execcuted 60 time and hence all these requests are bombarded to server randomly. This test case will validate working of all the systems calls and distributed mutual exclusion between servers.
		Explanation: This test case uses five servers and two cients. Each client execs 60 User Program, which sends requests to a server randomly choosen. And the MV is set by program 1 and read in program 2. each user program increments the mv by 5, so the final result should by 300.

		+ How to Run:
			A. Open 7 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi.Now we run client 1
							nachos -m 5 -x ../test/execSpecialTest2_1 -T2 5
				  vii.Now we run client 2
							nachos -m 6 -x ../test/execSpecialTest2_2 -T2 5
	

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ How to test + > Movie Stimulation Implementation
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ The following case to impelement the movie stimulation scenario for multiple servers + multiple client machines(movie stimulation entities)

		Needs 8 terminal windows  for 8 nachos to run.
		Servers: 5 Windows - 5 servers: -T2 [1-5] --> this specifies the number of servers
		1. 		nachos -m 0 -s -T2 5
		2. 		nachos -m 1 -s -T2 5
		3. 		nachos -m 2 -s -T2 5
		4. 		nachos -m 3 -s -T2 5
		5. 		nachos -m 4 -s -T2 5

		+After all servers are ready waiting: Run the following entity:
		**Please donot run any other entities until this entity completes execution.
		6. nachos -m 5 -x ../test/initializeSystem -T2 5

		+ After the 6th step of initialize system is complete then run the below entities one by one,
		7. nachos -m 6 -x ../test/execMovieEntity1 -T2 5

		+ Run execMovieEntity2 as soon as execMovieEntity1 is in paused state.
		8.  nachos -m 7 -x ../test/execMovieEntity2 -T2 5

		+ Run execCustomers in the same window where 'initializeSystem' was executed.
		Please Run execCustomers after 5-6 seconds are elapsed running execMovieEntity2.
		9.  nachos -m 5 -x ../test/execCustomers -T2 5

		Info: The reason to follow the above procedure is because there are some resources which are initialized by particular
		entity and these resources are utilized by other entities and for proper working of the stimulation it becomes necessary to
		follow this procedure as network/socket is very very heavily used in the start of procedure.

=============================================
(+) Negative Test Cases
=============================================
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Negative  Test Case 1 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Negative Test Case 1: Test to Acquire a lock which is not Created
		Explanation:	In this the client first creates the lock and then tries to acquire a different lock which is not created by passing a different name in create request. Thus server throws the error message back to the client and client is not able to acquire as the lockName is not valid.
						The client requests will be sent to different servers.
		+ How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi. Now we run client 1
							nachos -m 5 -x ../test/distributedNegativeTest_1 -T2 5

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Negative  Test Case 2 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Negative Test Case 5: Test to Release a lock which is not Acquired
		Explanation:	In this the client first creates the lock and then tries to release the lock without acquiring it. Thus server throws the error message back to the client and client is not able to release the lock as it is not the lock owner.
						The client requests will be sent to different servers.
		+ How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi. Now we run client 1
							nachos -m 1 -x ../test/distributedNegativeTest_2 -T2 5


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Negative  Test Case 3 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Negative Test Case 3: Test to Access Monitor Variable at index out of bound
	  Explanation:	In this the client first creates a lock and a monitor variable, acquires the lock it then sets a value at index 1 of monitor variable and then tries to access value at an index which is out of bound and the server returns an error message.
					The client requests will be sent to different servers.
					
		+ How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi. Now we run client 1
							nachos -m 1 -x ../test/distributedNegativeTest_3 -T2 5	 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Negative  Test Case 4 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Negative Test Case 4: Test to Signal on a condition on which no body is waiting.
	  Explanation:	In this test, there are two client, the first client creates a lock and a condition and the one client wait on the condition with the lock it created. Then the second client creates a lock and condition with different name and tries to signal and gets error since no body is waiting.
	  
		+ How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi. Now we run client 1
							nachos -m 1 -x ../test/negativeTest_4_1 -T2 5
				  vii.Now we run client 1
							nachos -m 1 -x ../test/negativeTest_4_2	-T2 5

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Negative Test Case 5 >
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	>> Distributed Systems Negative Test Case 6: Test to Set Monitor variable at invalid location
	  Explanation:	Here the client creates the monitor variable, The client then tries to Set the monitor variable at an invalid index
	  
		+ How to Run:
			A. Open 6 Terminals: 
				  i.  First Terminal: We run Server here
							nachos -m 0 -s -T2 5
				  ii. Second Terminal: We run Server here
							nachos -m 1 -s -T2 5
				  iii.Third Terminal: We run Server here
							nachos -m 2 -s -T2 5
				  iv. Fourth Terminal: We run Server here
							nachos -m 3 -s -T2 5
				  v.  Fifth Terminal: We run Server here
							nachos -m 4 -s -T2 5							
				  vi. Now we run client 1
							nachos -m 1 -x ../test/negativeTest_5 -T2 5

----------------------------------------------------------------------------------------------------------------------
	Test Cases For  Part 3 - Extra Credit
----------------------------------------------------------------------------------------------------------------------

The following test case is to show that a server is able to detect if any lock owner dies. If the owner is dead then depending upon whether there is any one waiting to acquire the lock the lock ownership is decided else the lock is made FREE.

+ HOW TO TEST +
-----------------------------------------------------------
	Test Case: Tests how the servers are able to detect any dead clients. If the dead client owned a lock then the ownership of the lock is taken back and given to any waiting client or else lock is made FREE.
	
	Explanation: In this test there are 5 clients (all single threaded user programs). Each of the client requests one or more resources (locks). 2 clients wait for 2 different clients to signal them. 4 clients exit without releasing the lock(s) they owned.
				 The server(s) detect any dead clients and pass on the ownership of the lock to the clients waiting to acquire the lock. Once all the clients are run to completion the server checks for their existence and FREEs the locks that they didnt release before exiting.

		+ Test Case Description:
			In the test case below, 
				+ 
					1. 'pingTest1' client program creates lock1
					2. 'pingTest1' acquires lock1
					3. 'pingTest1' client program creates CV1
					4. 'pingTest1' calls wait on CV1 with lock1 for signal from 'pingtest2' to signal
					5. 'pingTest1' receives signal from 'pingtest2' and it exits WITHOUT releasing lock1
				
				+ 
					1. 'pingtest2' creates lock1
					2. 'pingTest2' acquires lock1
					3. 'pingTest2' client program creates CV1
					5. 'pingTest2' signals 'pingtest1'
					6. 'pingTest2' releases lock1
					7. 'pingTest2' acquires lock1
					8. 'pingTest2' exits WITHOUT releasing lock1
					
				+ 
					1. 'pingTest3' client program creates mv1
					2. 'pingTest3' client program creates lock2
					3. 'pingTest3' acquires lock2
					4. 'pingTest3' client program creates CV2
					5. 'pingTest3' calls wait on CV2 with lock2 for signal from 'pingtest5' to signal
					6. 'pingTest3' receives signal from 'pingtest5' and it exits WITHOUT releasing lock2
				
				+
					1. 'pingTest4' client program creates mv1
					2. 'pingTest4' client program creates lock2
					3. 'pingTest4' acquires lock2
					4. 'pingTest4' releases lock2
				
				+
					1. 'pingTest5' client program creates lock1
					2. 'pingTest5' acquires lock1
					3. 'pingTest5' client program creates mv1
					4. 'pingTest5' client program creates lock2
					5. 'pingTest5' acquires lock2
					6. 'pingTest5' client program creates CV2
					7. 'pingTest5' signals user program 'pingtest3' and exits WITHOUT releasing lock1 and lock2
				
				+ When the client programs exit w/o releasing the locks the server periodically detects the dead client program who has allocated the resource and releases the respective resource.
				Please Note: wait for server to give the o/p as it works on timer and periodically checks after the client is supposed to be dead.
						
				Run one or more servers: The command for each of the server:  	nachos -m <machine id> -s -T3 <number of servers>
				
				We will be using 3 servers to test the test Case.
				
				For 3 servers use the commands: 
					server 1:		nachos -m 0 -s -T3 3
							
					server 2:		nachos -m 1 -s -T3 3
							
					server 3:		nachos -m 2 -s -T3 3
													
				Run clients:
				
				Client 1: 	nachos -m 3 -x ../test/pingTest1 -T3 3
				
				After you see "---- Please Start the program pingTest2 and pingTest3 in two different windows ----" displayed in client1 window:
				
				Run Client2: 	nachos -m 4 -x ../test/pingTest2 -T3 3
				
				Run Client3:	nachos -m 5 -x ../test/pingTest3 -T3 3
				
				After you see "---- Please Start the program pingTest4 and pingTest5 in two different windows ----" displayed in client3 window:
				
				Run Client4:	nachos -m 6 -x ../test/pingTest4 -T3 3
		
				Run Client5:	nachos -m 7 -x ../test/pingTest5 -T3 3
				
	
	NOTE: In the above commands "-T3" Flag is used to indicate "Test Case 3".
	
==============================================================================
==============================================================================
+ Test Output
*Note:
<+> Entire O/P cannot be pasted as it is very huge.
So, only first 10-30 lines and last 20-30 lines are pasted for reference, if the O/P is very large.

-----------------------
	Part 1
-----------------------
		-----------------------------------------
		O/P of Server: -	nachos -m 0 -s -T1
		-----------------------------------------
		+>
			aludra.usc.edu(22): nachos -m 0 -s -T1

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "amovieTechLock" from 1, box 0
			Lock movieTechLock created for Machine ID 1 and mailBox 0
			Sent "1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "amovieSeatManagerLock" from 1, box 0
			Lock movieSeatManagerLock created for Machine ID 1 and mailBox 0
			Sent "2" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "amovieSeatLock" from 1, box 0
			Lock movieSeatLock created for Machine ID 1 and mailBox 0
			Sent "3" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "atcLineLock" from 1, box 0
			Lock tcLineLock created for Machine ID 1 and mailBox 0
			Sent "4" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................
			
			Sent "1" to outPktHdr.to: 3,outMailHdr.to: 8
			Server Waiting to receive
			Got "gccCV4,ccLock4" from 4, box 0
			Lock ccLock4 Busy so put Machine ID 3 + mailBox 9 to wait queue
			Machine Id 4 and mailBox 0 signalled using CV: ccCV4 and Lock ccLock4
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "cccLock4" from 4, box 0
			Lock ccLock4 Released by Machine ID 4 + mailBox 0 and setting machine 3 and mailbox 9 as lock owner
			Machind 0 MailBox 0 sends message 1 to Client Machine 3 MailBox 9
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "ccustomerManagerExitLock" from 4, box 0
			Lock customerManagerExitLock Released by Machine ID 4 + mailBox 0 and setting lock Free as Lock wait queue empty
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 3, box 9
			MV mgrMovieTechExit already Created, return MV to machine 3 and mailBox 9
			MV[0] MVName mgrMovieTechExit get Value 1 by Machine Id 3 and mailBox 9
			Sent "1" to outPktHdr.to: 3,outMailHdr.to: 9
			Server Waiting to receive

			
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	----------------------------------------------------------------
	O/P of Client: -	nachos -m 1 -x ../test/initializeSystem -T1
	----------------------------------------------------------------
	+>
			aludra.usc.edu(10): nachos -m 1 -x ../test/initializeSystem -T1

			Machine 1 and mailBox 0 sent request message amovieTechLock to the server Machine 0 Machine 1 and mailBox 0 received message "1" from 0, box 0

			Machine 1 and mailBox 0 sent request message amovieSeatManagerLock to the server Machine 0 Machine 1 and mailBox 0 received message "2" from 0, box 0

			Machine 1 and mailBox 0 sent request message amovieSeatLock to the server Machine 0 Machine 1 and mailBox 0 received message "3" from 0, box 0

			Machine 1 and mailBox 0 sent request message atcLineLock to the server Machine 0 Machine 1 and mailBox 0 received message "4" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkLineCV0 to the server Machine 0 Machine 1 and mailBox 0 received message "1" from 0, box 0

			Machine 1 and mailBox 0 sent request message aticketClerkLock0 to the server Machine 0 Machine 1 and mailBox 0 received message "5" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkCV0 to the server Machine 0 Machine 1 and mailBox 0 received message "2" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkLineCV1 to the server Machine 0 Machine 1 and mailBox 0 received message "3" from 0, box 0

			...........................................................
			...........................................................
			------------		<1000s of Lines>	-------------------
			...........................................................
			...........................................................

			Machine 1 and mailBox 0 sent request message egroupTSCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "86" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupSeatWaitLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "91" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupSeatWaitCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "87" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupExitLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "92" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupExitCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "88" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupRegroupLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "93" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupRegroupCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "89" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupTELock7 to the server Machine 0 Machine 1 and mailBox 0 received message "94" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupTECV7 to the server Machine 0 Machine 1 and mailBox 0 received message "90" from 0, box 0

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 750735, idle 689645, system 51090, user 10000
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 508, sent 508

			Cleaning up...
			aludra.usc.edu(11):

	
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	---------------------------------------------------------------
	O/P of Client: -	nachos -m 3 -x ../test/execMovieEntity1 -T1
	---------------------------------------------------------------
	+>
		
		aludra.usc.edu(5): nachos -m 3 -x ../test/execMovieEntity1 -T1

		Exec Ticket Clerk : 0

		Exec Ticket Clerk : 1

		Exec Ticket Clerk : 2

		Exec Ticket Clerk : 3

		Exec Ticket Clerk : 4

		Machine 3 and mailBox 0 sent request message atcIndexLock to the server Machine 0 Machine 3 and mailBox 0 received message "95" from 0, box 0

		Machine 3 and mailBox 1 sent request message atcIndexLock to the server Machine 0
		Machine 3 and mailBox 2 sent request message atcIndexLock to the server Machine 0
		Machine 3 and mailBox 3 sent request message atcIndexLock to the server Machine 0 Machine 3 and mailBox 1 received message "95" from 0, box 0

		Machine 3 and mailBox 4 sent request message atcIndexLock to the server Machine 0 Machine 3 and mailBox 2 received message "95" from 0, box 0

		Machine 3 and mailBox 5 sent request message jnextCCIndex,1 to the server Machine 0 Machine 3 and mailBox 3 received message "95" from 0, box 0
		Machine 3 and mailBox 4 received message "95" from 0, box 0

		Machine 3 and mailBox 6 sent request message jnextCCIndex,1 to the server Machine 0 Machine 3 and mailBox 5 received message "2" from 0, box 0
		Machine 3 and mailBox 6 received message "2" from 0, box 0

		Machine 3 and mailBox 7 sent request message jnextCCIndex,1 to the server Machine 0 Machine 3 and mailBox 7 received message "2" from 0, box 0

		Machine 3 and mailBox 8 sent request message jnextCCIndex,1 to the server Machine 0
		Machine 3 and mailBox 9 sent request message jnextCCIndex,1 to the server Machine 0 Machine 3 and mailBox 8 received message "2" from 0, box 0

		Machine 3 and mailBox 10 sent request message jticketTakerState,3 to the server Machine 0 Machine 3 and mailBox 9 received message "2" from 0, box 0

		Machine 3 and mailBox 11 sent request message jticketTakerState,3 to the server Machine 0 Machine 3 and mailBox 10 received message "56" from 0, box 0
		Machine 3 and mailBox 11 received message "56" from 0, box 0
	
		...........................................................
		...........................................................
		------------		<1000s of Lines>	-------------------
		...........................................................
		...........................................................	
		
		Machine 3 and mailBox 11 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 11 received message "1" from 0, box 0
		Machine 3 and mailBox 12 received message "1" from 0, box 0

		Machine 3 and mailBox 12 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 12 received message "1" from 0, box 0
		Machine 3 and mailBox 0 received message "1" from 0, box 0

		Machine 3 and mailBox 0 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 0 received message "1" from 0, box 0
		Machine 3 and mailBox 1 received message "1" from 0, box 0

		Machine 3 and mailBox 1 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 1 received message "1" from 0, box 0
		Machine 3 and mailBox 2 received message "1" from 0, box 0

		Machine 3 and mailBox 2 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 2 received message "1" from 0, box 0
		Machine 3 and mailBox 3 received message "1" from 0, box 0

		Machine 3 and mailBox 3 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 3 received message "1" from 0, box 0
		Machine 3 and mailBox 4 received message "1" from 0, box 0

		Machine 3 and mailBox 4 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 4 received message "1" from 0, box 0
		Machine 3 and mailBox 5 received message "1" from 0, box 0

		Machine 3 and mailBox 5 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 5 received message "1" from 0, box 0
		Machine 3 and mailBox 6 received message "1" from 0, box 0

		Machine 3 and mailBox 6 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 6 received message "1" from 0, box 0
		Machine 3 and mailBox 7 received message "1" from 0, box 0

		Machine 3 and mailBox 7 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 7 received message "1" from 0, box 0
		Machine 3 and mailBox 8 received message "1" from 0, box 0

		Machine 3 and mailBox 8 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 8 received message "1" from 0, box 0
		Machine 3 and mailBox 9 received message "1" from 0, box 0

		Machine 3 and mailBox 9 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 3 and mailBox 9 received message "1" from 0, box 0

		 ProcessThread is the last thread in ALL the processes - Thus Halting the System
		Machine halting!

		Ticks: total 1115445985, idle 1115308343, system 109430, user 28212
		Disk I/O: reads 0, writes 0
		Console I/O: reads 0, writes 0
		Paging: faults 0
		Network I/O: packets received 1045, sent 1045

		Cleaning up...
		aludra.usc.edu(6):

		
		
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	---------------------------------------------------------------
	O/P of Client: -	nachos -m 4 -x ../test/execMovieEntity2 -T1
	---------------------------------------------------------------
	+>
	
		aludra.usc.edu(7): nachos -m 4 -x ../test/execMovieEntity2 -T1

		Machine 4 and mailBox 0 sent request message jmovieFinishState,1 to the server Machine 0 Machine 4 and mailBox 0 received message "16" from 0, box 0

		Machine 4 and mailBox 1 sent request message jcommandToStart,1 to the server Machine 0 Machine 4 and mailBox 1 received message "14" from 0, box 0

		Machine 4 and mailBox 0 sent request message jttTicketAcceptState,1 to the server Machine 0 Machine 4 and mailBox 0 received message "5" from 0, box 0

		Machine 4 and mailBox 1 sent request message jmovieFinishState,1 to the server Machine 0 Machine 4 and mailBox 1 received message "16" from 0, box 0

		Machine 4 and mailBox 0 sent request message jtotalAcceptedSeats,1 to the server Machine 0
		Machine 4 and mailBox 1 sent request message jmovieTechState,1 to the server Machine 0 Machine 4 and mailBox 0 received message "6" from 0, box 0
		Machine 4 and mailBox 1 received message "17" from 0, box 0

		Machine 4 and mailBox 0 sent request message jseatFullMessage,1 to the server Machine 0 Machine 4 and mailBox 0 received message "7" from 0, box 0

		Machine 4 and mailBox 1 sent request message jmgrMovieTechExit,1 to the server Machine 0 Machine 4 and mailBox 1 received message "21" from 0, box 0

		Machine 4 and mailBox 0 sent request message jtotalOccupiedSeats,1 to the server Machine 0
		Machine 4 and mailBox 1 sent request message amovieTechMgrLock to the server Machine 0 Machine 4 and mailBox 0 received message "18" from 0, box 0
		Machine 4 and mailBox 1 received message "104" from 0, box 0

		Machine 4 and mailBox 0 sent request message jtotalMovieRoomExitCount,1 to the server Machine 0 Machine 4 and mailBox 0 received message "19" from 0, box 0

		Machine 4 and mailBox 1 sent request message emovieTechMgrCV to the server Machine 0 Machine 4 and mailBox 1 received message "103" from 0, box 0

		Machine 4 and mailBox 0 sent request message jcommandToStart,1 to the server Machine 0
		Machine 4 and mailBox 1 sent request message amovieTechLock to the server Machine 0 Machine 4 and mailBox 0 received message "14" from 0, box 0
		Machine 4 and mailBox 1 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message jmovieManagerState,1 to the server Machine 0 Machine 4 and mailBox 0 received message "15" from 0, box 0

		Machine 4 and mailBox 1 sent request message emovieTechCV to the server Machine 0 Machine 4 and mailBox 1 received message "104" from 0, box 0

		...........................................................		
		...........................................................
		------------		<1000s of Lines>	-------------------
		...........................................................
		...........................................................	

		Machine 4 and mailBox 0 sent request message bccLock0 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message gccCV0,ccLock0 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message cccLock0 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message bccLock1 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message gccCV1,ccLock1 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message cccLock1 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message bccLock2 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message gccCV2,ccLock2 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message cccLock2 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message bccLock3 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message gccCV3,ccLock3 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message cccLock3 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message bccLock4 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message gccCV4,ccLock4 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message cccLock4 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		Machine 4 and mailBox 0 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0

		 ProcessThread is the last thread in ALL the processes - Thus Halting the System
		Machine halting!

		Ticks: total 158448679, idle 157274838, system 588810, user 585031
		Disk I/O: reads 0, writes 0
		Console I/O: reads 0, writes 0
		Paging: faults 0
		Network I/O: packets received 1838, sent 1838

		Cleaning up...
		aludra.usc.edu(8):
	
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	-------------------------------------------------------------
	O/P of Client: -	nachos -m 2 -x ../test/execCustomers -T1
	-------------------------------------------------------------
	+>
	
		aludra.usc.edu(8): nachos -m 2 -x ../test/execCustomers -T1

		Machine 2 and mailBox 0 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 0 received message "4" from 0, box 0

		Machine 2 and mailBox 1 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 1 received message "4" from 0, box 0

		Machine 2 and mailBox 2 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 2 received message "4" from 0, box 0

		Machine 2 and mailBox 3 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 3 received message "4" from 0, box 0

		Machine 2 and mailBox 4 sent request message jnextHCIndex,1 to the server Machine 0
		Machine 2 and mailBox 5 sent request message jnextHCIndex,1 to the server Machine 0
		Machine 2 and mailBox 6 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 4 received message "4" from 0, box 0

		Machine 2 and mailBox 7 sent request message jnextHCIndex,1 to the server Machine 0 Machine 2 and mailBox 5 received message "4" from 0, box 0
		Machine 2 and mailBox 6 received message "4" from 0, box 0

		Machine 2 and mailBox 8 sent request message bnextHCIndexLock to the server Machine 0 Machine 2 and mailBox 7 received message "4" from 0, box 0
		Machine 2 and mailBox 8 received message "1" from 0, box 0

		Machine 2 and mailBox 9 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 10 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 11 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 12 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 13 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 14 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 15 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 16 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 17 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 18 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 19 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 20 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 21 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 22 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 23 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 24 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 25 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 26 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 27 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 28 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 29 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 30 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 31 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 32 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 33 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 34 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 35 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 36 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 37 sent request message bnextHCIndexLock to the server Machine 0
		Machine 2 and mailBox 38 sent request message bnextHCIndexLock to the server Machine 0

		...........................................................		
		...........................................................
		------------		<1000s of Lines>	-------------------
		...........................................................
		...........................................................	

		Customer 0 in group 7 has left the movie theater.

		Machine 2 and mailBox 38 sent request message kallCustomerExitedCount,0 to the server Machine 0 Machine 2 and mailBox 38 received message "36" from 0, box 0

		Machine 2 and mailBox 38 sent request message lallCustomerExitedCount,0,37 to the server Machine 0 Machine 2 and mailBox 38 received message "1" from 0, box 0

		Machine 2 and mailBox 38 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 2 and mailBox 36 received message "1" from 0, box 0
		Machine 2 and mailBox 38 received message "1" from 0, box 0

		Customer 3 in group 7 has left the movie theater.

		Machine 2 and mailBox 36 sent request message kallCustomerExitedCount,0 to the server Machine 0 Machine 2 and mailBox 36 received message "37" from 0, box 0

		Machine 2 and mailBox 36 sent request message lallCustomerExitedCount,0,38 to the server Machine 0 Machine 2 and mailBox 36 received message "1" from 0, box 0

		Machine 2 and mailBox 36 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 2 and mailBox 37 received message "1" from 0, box 0
		Machine 2 and mailBox 36 received message "1" from 0, box 0

		Customer 1 in group 7 has left the movie theater.

		Machine 2 and mailBox 37 sent request message kallCustomerExitedCount,0 to the server Machine 0 Machine 2 and mailBox 37 received message "38" from 0, box 0

		Machine 2 and mailBox 37 sent request message lallCustomerExitedCount,0,39 to the server Machine 0 Machine 2 and mailBox 37 received message "1" from 0, box 0

		Machine 2 and mailBox 37 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 2 and mailBox 39 received message "1" from 0, box 0
		Machine 2 and mailBox 37 received message "1" from 0, box 0

		Customer 2 in group 7 has left the movie theater.

		Machine 2 and mailBox 39 sent request message kallCustomerExitedCount,0 to the server Machine 0 Machine 2 and mailBox 39 received message "39" from 0, box 0

		Machine 2 and mailBox 39 sent request message lallCustomerExitedCount,0,40 to the server Machine 0 Machine 2 and mailBox 39 received message "1" from 0, box 0

		Machine 2 and mailBox 39 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 2 and mailBox 39 received message "1" from 0, box 0

		Customer 4 in group 7 has left the movie theater.

		 ProcessThread is the last thread in ALL the processes - Thus Halting the System
		Machine halting!

		Ticks: total 97286415, idle 94297418, system 394020, user 2594977
		Disk I/O: reads 0, writes 0
		Console I/O: reads 0, writes 0
		Paging: faults 0
		Network I/O: packets received 3664, sent 3664

		Cleaning up...
		aludra.usc.edu(9):
		
_____________________________________________________________________________________________
_____________________________________________________________________________________________
+ Test Output

-----------------------
	Part 2
-----------------------

		-----------------------------------------
		O/P of Server: -	nachos -m 0 -s -T2 5
		-----------------------------------------
		+>

			aludra.usc.edu(13): nachos -m 0 -s -T2 5

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#amovieTechLock,1738144006" from 1, box 0

			I don't have the Lock movieTechLock, return a No to machine 1 and mailbox 0

			 ack1: !amovieTechLock,1738144006
			Server Waiting to receive
			Got "#amovieSeatManagerLock,1738152966" from 2, box 0

			I don't have the Lock movieSeatManagerLock, return a No to machine 2 and mailbox 0

			 ack1: !amovieSeatManagerLock,1738152966
			Server Waiting to receive
			Got "#amovieSeatLock,1738162968" from 3, box 0

			I don't have the Lock movieSeatLock, return a No to machine 3 and mailbox 0

			 ack1: !amovieSeatLock,1738162968
			Server Waiting to receive
			Got "#atcLineLock,1738172971" from 4, box 0

			I don't have the Lock tcLineLock, return a No to machine 4 and mailbox 0

			 ack1: !atcLineLock,1738172971
			Server Waiting to receive
			Got "eticketClerkLineCV0" from 5, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #eticketClerkLineCV0,1738182992 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #eticketClerkLineCV0,1738182992 to machine id = 2
			Server Machine 0 MailBox 0 Sending DYH Message #eticketClerkLineCV0,1738182992 to machine id = 3
			Got "!eticketClerkLineCV0,1738182992" from 1, box 1

			In handle no response for msg ticketClerkLineCV0,1738182992
			Server Machine 0 MailBox 0 Sending DYH Message #eticketClerkLineCV0,1738182992 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!eticketClerkLineCV0,1738182992" from 2, box 1

			In handle no response for msg ticketClerkLineCV0,1738182992
			Server Waiting to receive
			Got "!eticketClerkLineCV0,1738182992" from 3, box 1

			In handle no response for msg ticketClerkLineCV0,1738182992
			Server Waiting to receive
			Got "!eticketClerkLineCV0,1738182992" from 4, box 1

			In handle no response for msg ticketClerkLineCV0,1738182992

			Creating CV ticketClerkLineCV0
			CV Created at server, return CVID: 1 to machineID: 0 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#aticketClerkLock0,1738192930" from 1, box 0

			I don't have the Lock ticketClerkLock0, return a No to machine 1 and mailbox 0

			 ack1: !aticketClerkLock0,1738192930
			Server Waiting to receive
			Got "#eticketClerkCV0,1738202923" from 2, box 0

			I don't have the CV ticketClerkCV0, return a No to machine 2 and mailbox 0
			Server Waiting to receive
			Got "#eticketClerkLineCV1,1738213027" from 3, box 0

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "!bccLock4" from 3, box 1

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "$bccLock4,3" from 4, box 1
			Sent "bccLock4" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#gccCV4" from 1, box 0

			I have the CV ccCV4, so return ID to machineID 1 and mailBox 0
			Server Waiting to receive
			Got "gccCV4,ccLock4" from 7, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #yccLock4,7,0 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #yccLock4,7,0 to machine id = 2
			Server Machine 0 MailBox 0 Sending DYH Message #yccLock4,7,0 to machine id = 3
			Got "!yccLock4" from 1, box 1

			In handle no response for msg ccLock4
			Server Machine 0 MailBox 0 Sending DYH Message #yccLock4,7,0 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!yccLock4" from 2, box 1

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "!yccLock4" from 3, box 1

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "$yccLock4,3,*,7,0" from 4, box 1
			Machine Id 7 and mailBox 0 signalled using CV: ccCV4 and Lock ccLock4
			Sent "bccLock4" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#cccLock4" from 2, box 0

			I don't have the Lock ccLock4, return a No to machine 2 and mailbox 0

			 ack1: !cccLock4
			 
			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................
			 
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 6, box 8
			Server Machine 0 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 2
			Got "#ccustomerManagerExitLock" from 3, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 3
			Server Machine 0 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 4
			Server Waiting to receive

			I don't have the Lock customerManagerExitLock, return a No to machine 3 and mailbox 0

			 ack1: !ccustomerManagerExitLock
			Server Waiting to receive
			Got "$kmgrMovieTechExit,0" from 1, box 1
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 2, box 1

			In handle no response for msg mgrMovieTechExit
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 3, box 1

			In handle no response for msg mgrMovieTechExit
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 4, box 1

			In handle no response for msg mgrMovieTechExit
			Sent "kmgrMovieTechExit,0" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			^C
			Cleaning up...
			aludra.usc.edu(14):

		-----------------------------------------
		O/P of Server: -	nachos -m 1 -s -T2 5
		-----------------------------------------
		+>

			aludra.usc.edu(6): nachos -m 1 -s -T2 5

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "amovieTechLock" from 5, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #amovieTechLock,1738144006 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #amovieTechLock,1738144006 to machine id = 2
			Got "!amovieTechLock,1738144006" from 0, box 1

			In handle no response for msg movieTechLock,1738144006
			Server Machine 1 MailBox 0 Sending DYH Message #amovieTechLock,1738144006 to machine id = 3
			Server Machine 1 MailBox 0 Sending DYH Message #amovieTechLock,1738144006 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!amovieTechLock,1738144006" from 2, box 1

			In handle no response for msg movieTechLock,1738144006
			Server Waiting to receive
			Got "!amovieTechLock,1738144006" from 3, box 1

			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................


			Acquired pend req lock

			I dnt have the lock so forward message - 2
			Server Machine 1 MailBox 0 Sending DYH Message #cccLock2 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #cccLock2 to machine id = 2
			Server Machine 1 MailBox 0 Sending DYH Message #cccLock2 to machine id = 3
			Got "!cccLock2" from 0, box 1

			In handle no response for msg ccLock2
			Server Machine 1 MailBox 0 Sending DYH Message #cccLock2 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!cccLock2" from 2, box 1

			In handle no response for msg ccLock2
			Server Waiting to receive
			Got "$cccLock2,3" from 3, box 1
			Server Waiting to receive
			Got "!cccLock2" from 4, box 1

			In handle no response for msg ccLock2
			Sent "cccLock2" to outPktHdr.to: 3,outMailHdr.to: 0
			Server Waiting to receive
			Got "#bccLock3" from 2, box 0

			I have the Lock ccLock3, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 3, box 0

			I have the MV mgrMovieTechExit, returning MVInfo to Machine Id 3 and mailBox 0
			Server Waiting to receive
			Got "bccLock3" from 7, box 0
			Free Lock ccLock3 Found for Machine ID 7 and mailBox 0
			Sent "1" to outPktHdr.to: 7,outMailHdr.to: 0
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 6, box 7
			MV mgrMovieTechExit already Created, return MV to machine 6 and mailBox 7
			MV[0] MVName mgrMovieTechExit get Value 1 by Machine Id 6 and mailBox 7
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 7
			Server Waiting to receive
			Got "#gccCV3" from 3, box 0

			I don't have the CV ccCV3, return a No to machine 3 and mailbox 0
			Server Waiting to receive
			Got "#yccLock3,7,0" from 2, box 0

			I have the Lock ccLock3, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "bccLock3" from 6, box 9
			Lock ccLock3 Busy so put Machine ID 6 + mailBox 9 to wait queue
			Server Waiting to receive
			Got "#cccLock3" from 4, box 0

			I have the Lock ccLock3, return LockID to machine 4 and mailBox 0
			Server Waiting to receive
			Got "cccLock3" from 7, box 0
			Lock ccLock3 Released by Machine ID 7 + mailBox 0 and setting machine 6 and mailbox 9 as lock owner
			Machind 1 MailBox 0 sends message 1 to Client Machine 6 MailBox 9
			Sent "1" to outPktHdr.to: 7,outMailHdr.to: 0
			Server Waiting to receive
			Got "#bccLock4" from 0, box 0

			I don't have the Lock ccLock4, return a No to machine 0 and mailbox 0

			 ack1: !bccLock4
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 4, box 0

			I have the MV mgrMovieTechExit, returning MVInfo to Machine Id 4 and mailBox 0
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 6, box 9
			MV mgrMovieTechExit already Created, return MV to machine 6 and mailBox 9
			MV[0] MVName mgrMovieTechExit get Value 1 by Machine Id 6 and mailBox 9
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 9
			Server Waiting to receive
			Got "gccCV4,ccLock4" from 7, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #gccCV4 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #gccCV4 to machine id = 2
			Server Machine 1 MailBox 0 Sending DYH Message #gccCV4 to machine id = 3
			Got "$gccCV4,4" from 0, box 1
			Server Machine 1 MailBox 0 Sending DYH Message #gccCV4 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!gccCV4" from 2, box 1

			In handle no response for msg ccCV4
			Server Waiting to receive
			Got "!gccCV4" from 3, box 1

			In handle no response for msg ccCV4
			Server Waiting to receive
			Got "!gccCV4" from 4, box 1

			In handle no response for msg ccCV4
			Sent "gccCV4,ccLock4" to outPktHdr.to: 0,outMailHdr.to: 0
			Server Waiting to receive
			Got "#yccLock4,7,0" from 0, box 0

			I don't have the Lock ccLock4, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#cccLock4" from 2, box 0

			I don't have the Lock ccLock4, return a No to machine 2 and mailbox 0

			 ack1: !cccLock4
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 0, box 0

			I have the MV mgrMovieTechExit, returning MVInfo to Machine Id 0 and mailBox 0
			Server Waiting to receive
			Got "#ccustomerManagerExitLock" from 3, box 0

			I don't have the Lock customerManagerExitLock, return a No to machine 3 and mailbox 0

			 ack1: !ccustomerManagerExitLock
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 6, box 8
			MV mgrMovieTechExit already Created, return MV to machine 6 and mailBox 8
			MV[0] MVName mgrMovieTechExit get Value 1 by Machine Id 6 and mailBox 8
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 8
			Server Waiting to receive
			^C
			Cleaning up...
			aludra.usc.edu(14):
			
			
		-----------------------------------------
		O/P of Server: -	nachos -m 2 -s -T2 5
		-----------------------------------------
		+>
		
			aludra.usc.edu(7): nachos -m 2 -s -T2 5

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#amovieTechLock,1738144006" from 1, box 0

			I don't have the Lock movieTechLock, return a No to machine 1 and mailbox 0

			 ack1: !amovieTechLock,1738144006
			Server Waiting to receive
			Got "amovieSeatManagerLock" from 5, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #amovieSeatManagerLock,1738152966 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #amovieSeatManagerLock,1738152966 to machine id = 1
			Server Machine 2 MailBox 0 Sending DYH Message #amovieSeatManagerLock,1738152966 to machine id = 3
			Server Machine 2 MailBox 0 Sending DYH Message #amovieSeatManagerLock,1738152966 to machine id = 4
			Got "!amovieSeatManagerLock,1738152966" from 0, box 1

			In handle no response for msg movieSeatManagerLock,1738152966
			Server Waiting to receive
			Server Waiting to receive
			Got "!amovieSeatManagerLock,1738152966" from 1, box 1

			In handle no response for msg movieSeatManagerLock,1738152966
			Server Waiting to receive
			Got "!amovieSeatManagerLock,1738152966" from 3, box 1

			In handle no response for msg movieSeatManagerLock,1738152966
			Server Waiting to receive
			Got "!amovieSeatManagerLock,1738152966" from 4, box 1

			In handle no response for msg movieSeatManagerLock,1738152966

			Creating Lock movieSeatManagerLock
			Lock movieSeatManagerLock created for Machine ID 2 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#amovieSeatLock,1738162968" from 3, box 0

			I don't have the Lock movieSeatLock, return a No to machine 3 and mailbox 0

			 ack1: !amovieSeatLock,1738162968
			Server Waiting to receive
			Got "#atcLineLock,1738172971" from 4, box 0

			I don't have the Lock tcLineLock, return a No to machine 4 and mailbox 0

			 ack1: !atcLineLock,1738172971
			Server Waiting to receive
			Got "#eticketClerkLineCV0,1738182992" from 0, box 0

			I don't have the CV ticketClerkLineCV0, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#aticketClerkLock0,1738192930" from 1, box 0

			I don't have the Lock ticketClerkLock0, return a No to machine 1 and mailbox 0

			 ack1: !aticketClerkLock0,1738192930
			Server Waiting to receive
			Got "eticketClerkCV0" from 5, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #eticketClerkCV0,1738202923 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #eticketClerkCV0,1738202923 to machine id = 1
			Server Machine 2 MailBox 0 Sending DYH Message #eticketClerkCV0,1738202923 to machine id = 3
			Got "!eticketClerkCV0,1738202923" from 0, box 1

			In handle no response for msg ticketClerkCV0,1738202923
			Server Machine 2 MailBox 0 Sending DYH Message #eticketClerkCV0,1738202923 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!eticketClerkCV0,1738202923" from 1, box 1

			In handle no response for msg ticketClerkCV0,1738202923
			Server Waiting to receive
			Got "!eticketClerkCV0,1738202923" from 3, box 1

			In handle no response for msg ticketClerkCV0,1738202923
			Server Waiting to receive
			Got "!eticketClerkCV0,1738202923" from 4, box 1

			In handle no response for msg ticketClerkCV0,1738202923

			Creating CV ticketClerkCV0
			CV Created at server, return CVID: 1 to machineID: 2 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#eticketClerkLineCV1,1738213027" from 3, box 0

			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................
						
			I don't have the Lock ccLock4, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "cccLock4" from 7, box 0

			I dnt have the lock so forward message

			 Release - Key = cccLock4

			Acquired pend req lock

			I dnt have the lock so forward message - 2
			Server Machine 2 MailBox 0 Sending DYH Message #cccLock4 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #cccLock4 to machine id = 1
			Server Machine 2 MailBox 0 Sending DYH Message #cccLock4 to machine id = 3
			Got "!cccLock4" from 0, box 1

			In handle no response for msg ccLock4
			Server Machine 2 MailBox 0 Sending DYH Message #cccLock4 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!cccLock4" from 1, box 1

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "!cccLock4" from 3, box 1

			In handle no response for msg ccLock4
			Server Waiting to receive
			Got "$cccLock4,3" from 4, box 1
			Sent "cccLock4" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 0, box 0

			I don't have the MV mgrMovieTechExit, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#ccustomerManagerExitLock" from 3, box 0

			I have the Lock customerManagerExitLock, return LockID to machine 3 and mailBox 0
			Server Waiting to receive
			Got "ccustomerManagerExitLock" from 7, box 0
			Lock customerManagerExitLock Released by Machine ID 7 + mailBox 0 and setting lock Free as Lock wait queue empty
			Sent "1" to outPktHdr.to: 7,outMailHdr.to: 0
			Server Waiting to receive
			^C
			Cleaning up...
			aludra.usc.edu(8):

		-----------------------------------------
		O/P of Server: -	nachos -m 3 -s -T2 5
		-----------------------------------------
		+>
		
			
			aludra.usc.edu(3): nachos -m 3 -s -T2 5

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#amovieTechLock,1738144006" from 1, box 0

			I don't have the Lock movieTechLock, return a No to machine 1 and mailbox 0

			 ack1: !amovieTechLock,1738144006
			Server Waiting to receive
			Got "#amovieSeatManagerLock,1738152966" from 2, box 0

			I don't have the Lock movieSeatManagerLock, return a No to machine 2 and mailbox 0

			 ack1: !amovieSeatManagerLock,1738152966
			Server Waiting to receive
			Got "amovieSeatLock" from 5, box 0
			Server Machine 3 MailBox 0 Sending DYH Message #amovieSeatLock,1738162968 to machine id = 0
			Server Machine 3 MailBox 0 Sending DYH Message #amovieSeatLock,1738162968 to machine id = 1
			Server Machine 3 MailBox 0 Sending DYH Message #amovieSeatLock,1738162968 to machine id = 2
			Got "!amovieSeatLock,1738162968" from 0, box 1

			In handle no response for msg movieSeatLock,1738162968
			Server Machine 3 MailBox 0 Sending DYH Message #amovieSeatLock,1738162968 to machine id = 4
			Server Waiting to receive
			Server Waiting to receive
			Got "!amovieSeatLock,1738162968" from 1, box 1

			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................

			In handle no response for msg ccCV3
			Sent "gccCV3,ccLock3" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			Got "#yccLock3,7,0" from 2, box 0

			I don't have the Lock ccLock3, return a No to machine 2 and mailbox 0
			Server Waiting to receive
			Got "#cccLock3" from 4, box 0

			I don't have the Lock ccLock3, return a No to machine 4 and mailbox 0

			 ack1: !cccLock3
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 4, box 0

			I don't have the MV mgrMovieTechExit, return a No to machine 4 and mailbox 0
			Server Waiting to receive
			Got "#bccLock4" from 0, box 0

			I don't have the Lock ccLock4, return a No to machine 0 and mailbox 0

			 ack1: !bccLock4
			Server Waiting to receive
			Got "#gccCV4" from 1, box 0

			I don't have the CV ccCV4, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#yccLock4,7,0" from 0, box 0

			I don't have the Lock ccLock4, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#cccLock4" from 2, box 0

			I don't have the Lock ccLock4, return a No to machine 2 and mailbox 0

			 ack1: !cccLock4
			Server Waiting to receive
			Got "ccustomerManagerExitLock" from 7, box 0

			I dnt have the lock so forward message

			 Release - Key = ccustomerManagerExitLock

			Acquired pend req lock

			I dnt have the lock so forward message - 2
			Server Machine 3 MailBox 0 Sending DYH Message #ccustomerManagerExitLock to machine id = 0
			Server Machine 3 MailBox 0 Sending DYH Message #ccustomerManagerExitLock to machine id = 1
			Server Machine 3 MailBox 0 Sending DYH Message #ccustomerManagerExitLock to machine id = 2
			Server Machine 3 MailBox 0 Sending DYH Message #ccustomerManagerExitLock to machine id = 4
			Got "#kmgrMovieTechExit,0" from 0, box 0
			Server Waiting to receive

			I don't have the MV mgrMovieTechExit, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "!ccustomerManagerExitLock" from 1, box 1

			In handle no response for msg customerManagerExitLock
			Server Waiting to receive
			Got "$ccustomerManagerExitLock,4" from 2, box 1
			Server Waiting to receive
			Got "!ccustomerManagerExitLock" from 4, box 1

			In handle no response for msg customerManagerExitLock
			Server Waiting to receive
			Got "!ccustomerManagerExitLock" from 0, box 1

			In handle no response for msg customerManagerExitLock
			Sent "ccustomerManagerExitLock" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			^C
			Cleaning up...
			aludra.usc.edu(4):
				
		-----------------------------------------
		O/P of Server: -	nachos -m 4 -s -T2 5
		-----------------------------------------
		+>

						aludra.usc.edu(4): nachos -m 4 -s -T2 5

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#amovieTechLock,1738144006" from 1, box 0

			I don't have the Lock movieTechLock, return a No to machine 1 and mailbox 0

			 ack1: !amovieTechLock,1738144006
			Server Waiting to receive
			Got "#amovieSeatManagerLock,1738152966" from 2, box 0

			I don't have the Lock movieSeatManagerLock, return a No to machine 2 and mailbox 0

			 ack1: !amovieSeatManagerLock,1738152966
			Server Waiting to receive
			Got "#amovieSeatLock,1738162968" from 3, box 0

			I don't have the Lock movieSeatLock, return a No to machine 3 and mailbox 0

			 ack1: !amovieSeatLock,1738162968
			Server Waiting to receive
			Got "atcLineLock" from 5, box 0
			Server Machine 4 MailBox 0 Sending DYH Message #atcLineLock,1738172971 to machine id = 0
			Server Machine 4 MailBox 0 Sending DYH Message #atcLineLock,1738172971 to machine id = 1
			Server Machine 4 MailBox 0 Sending DYH Message #atcLineLock,1738172971 to machine id = 2
			Got "!atcLineLock,1738172971" from 0, box 1

			In handle no response for msg tcLineLock,1738172971
			Server Machine 4 MailBox 0 Sending DYH Message #atcLineLock,1738172971 to machine id = 3
			Server Waiting to receive
			Server Waiting to receive
			Got "!atcLineLock,1738172971" from 1, box 1

			In handle no response for msg tcLineLock,1738172971
			Server Waiting to receive
			Got "!atcLineLock,1738172971" from 2, box 1

			In handle no response for msg tcLineLock,1738172971
			Server Waiting to receive
			Got "!atcLineLock,1738172971" from 3, box 1

			In handle no response for msg tcLineLock,1738172971

			Creating Lock tcLineLock
			Lock tcLineLock created for Machine ID 4 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#eticketClerkLineCV0,1738182992" from 0, box 0

			I don't have the CV ticketClerkLineCV0, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#aticketClerkLock0,1738192930" from 1, box 0

			I don't have the Lock ticketClerkLock0, return a No to machine 1 and mailbox 0

			 ack1: !aticketClerkLock0,1738192930
			Server Waiting to receive
			Got "#eticketClerkCV0,1738202923" from 2, box 0

			I don't have the CV ticketClerkCV0, return a No to machine 2 and mailbox 0
			Server Waiting to receive
			Got "#eticketClerkLineCV1,1738213027" from 3, box 0

			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................

			I dnt have the lock so forward message - 2
			Server Machine 4 MailBox 0 Sending DYH Message #cccLock3 to machine id = 0
			Server Machine 4 MailBox 0 Sending DYH Message #cccLock3 to machine id = 1
			Server Machine 4 MailBox 0 Sending DYH Message #cccLock3 to machine id = 2
			Got "!cccLock3" from 0, box 1

			In handle no response for msg ccLock3
			Server Machine 4 MailBox 0 Sending DYH Message #cccLock3 to machine id = 3
			Server Waiting to receive
			Server Waiting to receive
			Got "$cccLock3,3" from 1, box 1
			Server Waiting to receive
			Got "!cccLock3" from 2, box 1

			In handle no response for msg ccLock3
			Server Waiting to receive
			Got "!cccLock3" from 3, box 1

			In handle no response for msg ccLock3
			Sent "cccLock3" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "kmgrMovieTechExit,0" from 6, box 9
			Server Machine 4 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 0
			Server Machine 4 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 1
			Server Machine 4 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 2
			Server Machine 4 MailBox 0 Sending DYH Message #kmgrMovieTechExit,0 to machine id = 3
			Server Waiting to receive
			Got "$kmgrMovieTechExit,0" from 1, box 1
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 3, box 1

			In handle no response for msg mgrMovieTechExit
			Server Waiting to receive
			Got "#bccLock4" from 0, box 0

			I have the Lock ccLock4, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 2, box 1

			In handle no response for msg mgrMovieTechExit
			Server Waiting to receive
			Got "!kmgrMovieTechExit" from 0, box 1

			In handle no response for msg mgrMovieTechExit
			Sent "kmgrMovieTechExit,0" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "bccLock4" from 7, box 0
			Free Lock ccLock4 Found for Machine ID 7 and mailBox 0
			Sent "1" to outPktHdr.to: 7,outMailHdr.to: 0
			Server Waiting to receive
			Got "#gccCV4" from 1, box 0

			I don't have the CV ccCV4, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#yccLock4,7,0" from 0, box 0

			I have the Lock ccLock4, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "bccLock4" from 6, box 8
			Lock ccLock4 Busy so put Machine ID 6 + mailBox 8 to wait queue
			Server Waiting to receive
			Got "#cccLock4" from 2, box 0

			I have the Lock ccLock4, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "cccLock4" from 7, box 0
			Lock ccLock4 Released by Machine ID 7 + mailBox 0 and setting machine 6 and mailbox 8 as lock owner
			Machind 4 MailBox 0 sends message 1 to Client Machine 6 MailBox 8
			Sent "1" to outPktHdr.to: 7,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ccustomerManagerExitLock" from 3, box 0

			I don't have the Lock customerManagerExitLock, return a No to machine 3 and mailbox 0

			 ack1: !ccustomerManagerExitLock
			Server Waiting to receive
			Got "#kmgrMovieTechExit,0" from 0, box 0

			I don't have the MV mgrMovieTechExit, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			^C
			Cleaning up...
			aludra.usc.edu(5):		
		
		+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		----------------------------------------------------------------
		O/P of Client: -	nachos -m 5 -x ../test/initializeSystem -T2 5
		----------------------------------------------------------------
		+>
		
			aludra.usc.edu(10): nachos -m 5 -x ../test/initializeSystem -T2 5

			Machine 1 and mailBox 0 sent request message amovieTechLock to the server Machine 0 Machine 1 and mailBox 0 received message "1" from 0, box 0

			Machine 1 and mailBox 0 sent request message amovieSeatManagerLock to the server Machine 0 Machine 1 and mailBox 0 received message "2" from 0, box 0

			Machine 1 and mailBox 0 sent request message amovieSeatLock to the server Machine 0 Machine 1 and mailBox 0 received message "3" from 0, box 0

			Machine 1 and mailBox 0 sent request message atcLineLock to the server Machine 0 Machine 1 and mailBox 0 received message "4" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkLineCV0 to the server Machine 0 Machine 1 and mailBox 0 received message "1" from 0, box 0

			Machine 1 and mailBox 0 sent request message aticketClerkLock0 to the server Machine 0 Machine 1 and mailBox 0 received message "5" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkCV0 to the server Machine 0 Machine 1 and mailBox 0 received message "2" from 0, box 0

			Machine 1 and mailBox 0 sent request message eticketClerkLineCV1 to the server Machine 0 Machine 1 and mailBox 0 received message "3" from 0, box 0

			...........................................................
			...........................................................
			------------		<1000s of Lines>	-------------------
			...........................................................
			...........................................................

			Machine 1 and mailBox 0 sent request message egroupTSCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "86" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupSeatWaitLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "91" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupSeatWaitCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "87" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupExitLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "92" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupExitCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "88" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupRegroupLock7 to the server Machine 0 Machine 1 and mailBox 0 received message "93" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupRegroupCV7 to the server Machine 0 Machine 1 and mailBox 0 received message "89" from 0, box 0

			Machine 1 and mailBox 0 sent request message agroupTELock7 to the server Machine 0 Machine 1 and mailBox 0 received message "94" from 0, box 0

			Machine 1 and mailBox 0 sent request message egroupTECV7 to the server Machine 0 Machine 1 and mailBox 0 received message "90" from 0, box 0

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 750735, idle 689645, system 51090, user 10000
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 508, sent 508

			Cleaning up...
			aludra.usc.edu(11):
		
		
		+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		---------------------------------------------------------------
		O/P of Client: -	nachos -m 6 -x ../test/execMovieEntity1 -T1
		---------------------------------------------------------------
		+>
		
			aludra.usc.edu(6): nachos -m 5 -x ../test/execCustomers -T2 5

			Machine 5 and mailBox 0 sent request message jnextHCIndex,1 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Machine 5 and mailBox 1 sent request message jnextHCIndex,1 to the server Machine 1 Machine 5 and mailBox 1 received message "1" from 2, box 0

			Machine 5 and mailBox 2 sent request message jnextHCIndex,1 to the server Machine 2 Machine 5 and mailBox 2 received message "1" from 3, box 0

			Machine 5 and mailBox 3 sent request message jnextHCIndex,1 to the server Machine 3 Machine 5 and mailBox 3 received message "1" from 4, box 0

			Machine 5 and mailBox 4 sent request message jnextHCIndex,1 to the server Machine 4
			Machine 5 and mailBox 5 sent request message jnextHCIndex,1 to the server Machine 4
			Machine 5 and mailBox 6 sent request message jnextHCIndex,1 to the server Machine 4
			Machine 5 and mailBox 7 sent request message jnextHCIndex,1 to the server Machine 4
			Machine 5 and mailBox 8 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 9 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 10 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 11 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 12 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 13 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 14 sent request message bnextHCIndexLock to the server Machine 4 Machine 5 and mailBox 10 received message "1" from 1, box 0

			Machine 5 and mailBox 15 sent request message bnextHCIndexLock to the server Machine 0 Machine 5 and mailBox 4 received message "1" from 0, box 0

			Machine 5 and mailBox 16 sent request message bnextHCIndexLock to the server Machine 1 Machine 5 and mailBox 5 received message "1" from 1, box 0
			Machine 5 and mailBox 6 received message "1" from 2, box 0

			Machine 5 and mailBox 17 sent request message bnextHCIndexLock to the server Machine 3 Machine 5 and mailBox 7 received message "1" from 3, box 0

			Machine 5 and mailBox 18 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 19 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 20 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 21 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 22 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 23 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 24 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 25 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 26 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 27 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 28 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 29 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 30 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 31 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 32 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 33 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 34 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 35 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 36 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 37 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 38 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 39 sent request message bnextHCIndexLock to the server Machine 4
			Machine 5 and mailBox 0 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 1 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 2 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 3 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 10 sent request message kmemCountForGrpMembers,0 to the server Machine 4
			Machine 5 and mailBox 4 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 5 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 6 sent request message jmovieManagerState,0 to the server Machine 4
			Machine 5 and mailBox 7 sent request message jmovieManagerState,0 to the server Machine 4 Machine 5 and mailBox 1 received message "3" from 2, box 0
			Machine 5 and mailBox 5 received message "3" from 2, box 0

			Machine 5 and mailBox 1 sent request message jticketTakerState,3 to the server Machine 1 Machine 5 and mailBox 10 received message "5" from 4, box 0

			Machine 5 and mailBox 5 sent request message jticketTakerState,3 to the server Machine 2 Machine 5 and mailBox 3 received message "3" from 4, box 0
			Machine 5 and mailBox 7 received message "3" from 4, box 0

			Machine 5 and mailBox 10 sent request message lmemCountForGrpMembers,0,4 to the server Machine 4 Machine 5 and mailBox 2 received message "3" from 3, box 0
			Machine 5 and mailBox 6 received message "3" from 3, box 0

			Machine 5 and mailBox 3 sent request message jticketTakerState,3 to the server Machine 1 Machine 5 and mailBox 0 received message "3" from 1, box 0
			Machine 5 and mailBox 4 received message "3" from 1, box 0

			Machine 5 and mailBox 7 sent request message jticketTakerState,3 to the server Machine 3 Machine 5 and mailBox 1 received message "12" from 0, box 0
			Machine 5 and mailBox 5 received message "12" from 1, box 0

			Machine 5 and mailBox 2 sent request message jticketTakerState,3 to the server Machine 0 Machine 5 and mailBox 10 received message "1" from 4, box 0
			Machine 5 and mailBox 3 received message "12" from 3, box 0
			Machine 5 and mailBox 7 received message "12" from 4, box 0

			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................
			

			Machine 5 and mailBox 34 sent request message fgroupTECV7,groupTELock7 to the server Machine 4 Machine 5 and mailBox 36 received message "1" from 2, box 0

			Machine 5 and mailBox 36 sent request message kgroupTheaterExitCount,7 to the server Machine 0 Machine 5 and mailBox 36 received message "1" from 1, box 0

			Machine 5 and mailBox 36 sent request message lgroupTheaterExitCount,7,2 to the server Machine 1 Machine 5 and mailBox 36 received message "1" from 1, box 0

			Machine 5 and mailBox 36 sent request message fgroupTECV7,groupTELock7 to the server Machine 2 Machine 5 and mailBox 37 received message "1" from 2, box 0

			Machine 5 and mailBox 37 sent request message kgroupTheaterExitCount,7 to the server Machine 3 Machine 5 and mailBox 37 received message "2" from 1, box 0

			Machine 5 and mailBox 37 sent request message lgroupTheaterExitCount,7,3 to the server Machine 4 Machine 5 and mailBox 37 received message "1" from 1, box 0

			Machine 5 and mailBox 37 sent request message fgroupTECV7,groupTELock7 to the server Machine 0
			Customer 3 in Group 7 is leaving the bathroom.

			Machine 5 and mailBox 39 sent request message bgroupTELock7 to the server Machine 1
			Customer 0 in Group 7 is leaving the bathroom.

			Machine 5 and mailBox 3 sent request message bgroupTELock7 to the server Machine 2 Machine 5 and mailBox 3 received message "1" from 2, box 0

			Machine 5 and mailBox 3 sent request message kgroupTheaterExitCount,7 to the server Machine 3 Machine 5 and mailBox 3 received message "3" from 1, box 0

			Machine 5 and mailBox 3 sent request message lgroupTheaterExitCount,7,4 to the server Machine 4 Machine 5 and mailBox 3 received message "1" from 1, box 0

			Machine 5 and mailBox 3 sent request message kgroupTheaterExitCount,7 to the server Machine 0 Machine 5 and mailBox 3 received message "4" from 1, box 0

			Machine 5 and mailBox 3 sent request message fgroupTECV7,groupTELock7 to the server Machine 1 Machine 5 and mailBox 39 received message "1" from 2, box 0

			Machine 5 and mailBox 39 sent request message kgroupTheaterExitCount,7 to the server Machine 2 Machine 5 and mailBox 39 received message "4" from 1, box 0

			Machine 5 and mailBox 39 sent request message lgroupTheaterExitCount,7,5 to the server Machine 3 Machine 5 and mailBox 39 received message "1" from 1, box 0

			Machine 5 and mailBox 39 sent request message hgroupTECV7,groupTELock7 to the server Machine 4 Machine 5 and mailBox 39 received message "1" from 3, box 0

			Machine 5 and mailBox 39 sent request message cgroupTELock7 to the server Machine 0 Machine 5 and mailBox 34 received message "1" from 2, box 0
			Machine 5 and mailBox 39 received message "1" from 2, box 0

			Machine 5 and mailBox 34 sent request message cgroupTELock7 to the server Machine 2 Machine 5 and mailBox 36 received message "1" from 2, box 0

			Machine 5 and mailBox 39 sent request message bcustomerManagerExitLock to the server Machine 3 Machine 5 and mailBox 34 received message "1" from 2, box 0
			Machine 5 and mailBox 39 received message "1" from 2, box 0

			Machine 5 and mailBox 36 sent request message cgroupTELock7 to the server Machine 0
			Machine 5 and mailBox 34 sent request message bcustomerManagerExitLock to the server Machine 0
			Machine 5 and mailBox 39 sent request message kallCustomerExitedCount,0 to the server Machine 0 Machine 5 and mailBox 37 received message "1" from 2, box 0
			Machine 5 and mailBox 39 received message "35" from 3, box 0

			Machine 5 and mailBox 37 sent request message cgroupTELock7 to the server Machine 2 Machine 5 and mailBox 36 received message "1" from 2, box 0

			Machine 5 and mailBox 39 sent request message lallCustomerExitedCount,0,36 to the server Machine 3 Machine 5 and mailBox 3 received message "1" from 2, box 0
			Machine 5 and mailBox 37 received message "1" from 2, box 0

			Machine 5 and mailBox 36 sent request message bcustomerManagerExitLock to the server Machine 0 Machine 5 and mailBox 39 received message "1" from 3, box 0

			Machine 5 and mailBox 3 sent request message cgroupTELock7 to the server Machine 1
			Machine 5 and mailBox 37 sent request message bcustomerManagerExitLock to the server Machine 1
			Machine 5 and mailBox 39 sent request message ccustomerManagerExitLock to the server Machine 1 Machine 5 and mailBox 3 received message "1" from 2, box 0
			Machine 5 and mailBox 34 received message "1" from 2, box 0

			Machine 5 and mailBox 3 sent request message bcustomerManagerExitLock to the server Machine 3 Machine 5 and mailBox 39 received message "1" from 2, box 0

			Customer 3 in group 7 has left the movie theater.

			Machine 5 and mailBox 34 sent request message kallCustomerExitedCount,0 to the server Machine 3 Machine 5 and mailBox 34 received message "36" from 3, box 0

			Machine 5 and mailBox 34 sent request message lallCustomerExitedCount,0,37 to the server Machine 4 Machine 5 and mailBox 34 received message "1" from 3, box 0

			Machine 5 and mailBox 34 sent request message ccustomerManagerExitLock to the server Machine 0 Machine 5 and mailBox 36 received message "1" from 2, box 0
			Machine 5 and mailBox 34 received message "1" from 2, box 0

			Customer 1 in group 7 has left the movie theater.

			Machine 5 and mailBox 36 sent request message kallCustomerExitedCount,0 to the server Machine 1 Machine 5 and mailBox 36 received message "37" from 3, box 0

			Machine 5 and mailBox 36 sent request message lallCustomerExitedCount,0,38 to the server Machine 2 Machine 5 and mailBox 36 received message "1" from 3, box 0

			Machine 5 and mailBox 36 sent request message ccustomerManagerExitLock to the server Machine 3 Machine 5 and mailBox 37 received message "1" from 2, box 0
			Machine 5 and mailBox 36 received message "1" from 2, box 0

			Customer 2 in group 7 has left the movie theater.

			Machine 5 and mailBox 37 sent request message kallCustomerExitedCount,0 to the server Machine 4 Machine 5 and mailBox 37 received message "38" from 3, box 0

			Machine 5 and mailBox 37 sent request message lallCustomerExitedCount,0,39 to the server Machine 0 Machine 5 and mailBox 37 received message "1" from 3, box 0

			Machine 5 and mailBox 37 sent request message ccustomerManagerExitLock to the server Machine 1 Machine 5 and mailBox 3 received message "1" from 2, box 0
			Machine 5 and mailBox 37 received message "1" from 2, box 0

			Customer 4 in group 7 has left the movie theater.

			Machine 5 and mailBox 3 sent request message kallCustomerExitedCount,0 to the server Machine 2 Machine 5 and mailBox 3 received message "39" from 3, box 0

			Machine 5 and mailBox 3 sent request message lallCustomerExitedCount,0,40 to the server Machine 3 Machine 5 and mailBox 3 received message "1" from 3, box 0

			Machine 5 and mailBox 3 sent request message ccustomerManagerExitLock to the server Machine 4 Machine 5 and mailBox 3 received message "1" from 2, box 0

			Customer 0 in group 7 has left the movie theater.

			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 499396604, idle 496583765, system 401420, user 2411419
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 3684, sent 3684

			Cleaning up...
			aludra.usc.edu(7):
		
		+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		---------------------------------------------------------------
		O/P of Client: -	nachos -m 7 -x ../test/execMovieEntity2 -T1
		---------------------------------------------------------------
		+>
		
			aludra.usc.edu(5): nachos -m 6 -x ../test/execMovieEntity1 -T2 5

			Exec Ticket Clerk : 0

			Exec Ticket Clerk : 1

			Exec Ticket Clerk : 2

			Exec Ticket Clerk : 3

			Exec Ticket Clerk : 4

			Machine 6 and mailBox 0 sent request message atcIndexLock to the server Machine 3 Machine 6 and mailBox 0 received message "20" from 1, box 1

			Machine 6 and mailBox 1 sent request message atcIndexLock to the server Machine 4
			Machine 6 and mailBox 2 sent request message atcIndexLock to the server Machine 4
			Machine 6 and mailBox 3 sent request message atcIndexLock to the server Machine 4
			Machine 6 and mailBox 4 sent request message atcIndexLock to the server Machine 4
			Machine 6 and mailBox 5 sent request message jnextCCIndex,1 to the server Machine 4
			Machine 6 and mailBox 6 sent request message jnextCCIndex,1 to the server Machine 4
			Machine 6 and mailBox 7 sent request message jnextCCIndex,1 to the server Machine 4
			Machine 6 and mailBox 8 sent request message jnextCCIndex,1 to the server Machine 4
			Machine 6 and mailBox 9 sent request message jnextCCIndex,1 to the server Machine 4
			Machine 6 and mailBox 10 sent request message jticketTakerState,3 to the server Machine 4
			Machine 6 and mailBox 11 sent request message jticketTakerState,3 to the server Machine 4 Machine 6 and mailBox 6 received message "1" from 2, box 0

			Machine 6 and mailBox 12 sent request message jticketTakerState,3 to the server Machine 0 Machine 6 and mailBox 10 received message "12" from 1, box 0
			Machine 6 and mailBox 1 received message "20" from 2, box 0

			Machine 6 and mailBox 0 sent request message jnextTCIndex,1 to the server Machine 2 Machine 6 and mailBox 2 received message "20" from 3, box 0
			Machine 6 and mailBox 5 received message "1" from 1, box 0

			Machine 6 and mailBox 6 sent request message jtotalAmtByCC,5 to the server Machine 4 Machine 6 and mailBox 3 received message "20" from 4, box 0
			Machine 6 and mailBox 7 received message "1" from 3, box 0

			Machine 6 and mailBox 10 sent request message jlineTicketMessage,3 to the server Machine 1 Machine 6 and mailBox 11 received message "12" from 2, box 0
			Machine 6 and mailBox 8 received message "1" from 4, box 0

			Machine 6 and mailBox 1 sent request message jnextTCIndex,1 to the server Machine 3 Machine 6 and mailBox 4 received message "20" from 0, box 0
			Machine 6 and mailBox 9 received message "1" from 0, box 0

			Machine 6 and mailBox 2 sent request message jnextTCIndex,1 to the server Machine 0 Machine 6 and mailBox 12 received message "12" from 3, box 0
			Machine 6 and mailBox 0 received message "1" from 4, box 0

			Machine 6 and mailBox 5 sent request message jtotalAmtByCC,5 to the server Machine 2 Machine 6 and mailBox 6 received message "11" from 0, box 0
			Machine 6 and mailBox 10 received message "11" from 1, box 0

			Machine 6 and mailBox 3 sent request message jnextTCIndex,1 to the server Machine 4 Machine 6 and mailBox 1 received message "1" from 2, box 0
			Machine 6 and mailBox 2 received message "1" from 3, box 0

			Machine 6 and mailBox 7 sent request message jtotalAmtByCC,5 to the server Machine 1 Machine 6 and mailBox 5 received message "11" from 4, box 0
			Machine 6 and mailBox 3 received message "1" from 0, box 0

			Machine 6 and mailBox 11 sent request message jlineTicketMessage,3 to the server Machine 3 Machine 6 and mailBox 7 received message "11" from 1, box 0
			Machine 6 and mailBox 11 received message "11" from 2, box 0

			Machine 6 and mailBox 8 sent request message jtotalAmtByCC,5 to the server Machine 0 Machine 6 and mailBox 8 received message "11" from 3, box 0

		
			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................		
		
			Machine 6 and mailBox 12 sent request message bticketTakerLock2 to the server Machine 0 Machine 6 and mailBox 12 received message "1" from 4, box 0

			Machine 6 and mailBox 12 sent request message cticketTakerLineLock to the server Machine 1 Machine 6 and mailBox 12 received message "1" from 1, box 0

			Machine 6 and mailBox 12 sent request message fticketTakerCV2,ticketTakerLock2 to the server Machine 2 Machine 6 and mailBox 10 received message "1" from 3, box 0

			Machine 6 and mailBox 10 sent request message kmgrMovieTechExit,0 to the server Machine 3 Machine 6 and mailBox 10 received message "1" from 1, box 0
			Machine 6 and mailBox 11 received message "1" from 1, box 0

			Machine 6 and mailBox 11 sent request message kmgrMovieTechExit,0 to the server Machine 4 Machine 6 and mailBox 11 received message "1" from 1, box 0
			Machine 6 and mailBox 12 received message "1" from 4, box 0

			Machine 6 and mailBox 12 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 6 and mailBox 12 received message "1" from 1, box 0
			Machine 6 and mailBox 1 received message "1" from 1, box 0

			Machine 6 and mailBox 1 sent request message kmgrMovieTechExit,0 to the server Machine 1 Machine 6 and mailBox 1 received message "1" from 1, box 0
			Machine 6 and mailBox 3 received message "1" from 4, box 0

			Machine 6 and mailBox 3 sent request message kmgrMovieTechExit,0 to the server Machine 2 Machine 6 and mailBox 3 received message "1" from 1, box 0
			Machine 6 and mailBox 0 received message "1" from 2, box 0

			Machine 6 and mailBox 0 sent request message kmgrMovieTechExit,0 to the server Machine 3 Machine 6 and mailBox 0 received message "1" from 1, box 0
			Machine 6 and mailBox 2 received message "1" from 0, box 0

			Machine 6 and mailBox 2 sent request message kmgrMovieTechExit,0 to the server Machine 4 Machine 6 and mailBox 2 received message "1" from 1, box 0
			Machine 6 and mailBox 4 received message "1" from 3, box 0

			Machine 6 and mailBox 4 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 6 and mailBox 4 received message "1" from 1, box 0
			Machine 6 and mailBox 6 received message "1" from 2, box 0

			Machine 6 and mailBox 6 sent request message kmgrMovieTechExit,0 to the server Machine 1 Machine 6 and mailBox 6 received message "1" from 1, box 0
			Machine 6 and mailBox 5 received message "1" from 0, box 0

			Machine 6 and mailBox 5 sent request message kmgrMovieTechExit,0 to the server Machine 2 Machine 6 and mailBox 5 received message "1" from 1, box 0
			Machine 6 and mailBox 7 received message "1" from 3, box 0

			Machine 6 and mailBox 7 sent request message kmgrMovieTechExit,0 to the server Machine 3 Machine 6 and mailBox 7 received message "1" from 1, box 0
			Machine 6 and mailBox 9 received message "1" from 1, box 0

			Machine 6 and mailBox 9 sent request message kmgrMovieTechExit,0 to the server Machine 4 Machine 6 and mailBox 9 received message "1" from 1, box 0
			Machine 6 and mailBox 8 received message "1" from 4, box 0

			Machine 6 and mailBox 8 sent request message kmgrMovieTechExit,0 to the server Machine 0 Machine 6 and mailBox 8 received message "1" from 1, box 0

			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 1564254389, idle 1564117358, system 108890, user 28141
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 1035, sent 1035

			Cleaning up...
			aludra.usc.edu(6):
		++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		-------------------------------------------------------------
		O/P of Client: -	nachos -m 5 -x ../test/execCustomers -T1
		-------------------------------------------------------------
		+>
		
			aludra.usc.edu(3): nachos -m 7 -x ../test/execMovieEntity2 -T2 5

			Machine 7 and mailBox 0 sent request message jmovieFinishState,1 to the server Machine 2 Machine 7 and mailBox 0 received message "4" from 1, box 0

			Machine 7 and mailBox 1 sent request message jcommandToStart,1 to the server Machine 3 Machine 7 and mailBox 1 received message "3" from 2, box 0

			Machine 7 and mailBox 0 sent request message jttTicketAcceptState,1 to the server Machine 4 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 1 sent request message jmovieFinishState,1 to the server Machine 0 Machine 7 and mailBox 1 received message "4" from 4, box 0

			Machine 7 and mailBox 0 sent request message jtotalAcceptedSeats,1 to the server Machine 1
			Machine 7 and mailBox 1 sent request message jmovieTechState,1 to the server Machine 1 Machine 7 and mailBox 0 received message "2" from 0, box 0
			Machine 7 and mailBox 1 received message "4" from 1, box 0

			Machine 7 and mailBox 0 sent request message jseatFullMessage,1 to the server Machine 3 Machine 7 and mailBox 0 received message "2" from 2, box 0

			Machine 7 and mailBox 1 sent request message jmgrMovieTechExit,1 to the server Machine 4 Machine 7 and mailBox 1 received message "5" from 3, box 0

			Machine 7 and mailBox 0 sent request message jtotalOccupiedSeats,1 to the server Machine 0
			Machine 7 and mailBox 1 sent request message amovieTechMgrLock to the server Machine 0 Machine 7 and mailBox 0 received message "4" from 4, box 0
			Machine 7 and mailBox 1 received message "21" from 0, box 1

			Machine 7 and mailBox 0 sent request message jtotalMovieRoomExitCount,1 to the server Machine 2 Machine 7 and mailBox 0 received message "4" from 1, box 0

			Machine 7 and mailBox 1 sent request message emovieTechMgrCV to the server Machine 3 Machine 7 and mailBox 1 received message "19" from 2, box 1

			Machine 7 and mailBox 0 sent request message jcommandToStart,1 to the server Machine 4
			Machine 7 and mailBox 1 sent request message amovieTechLock to the server Machine 4 Machine 7 and mailBox 0 received message "3" from 3, box 0
			Machine 7 and mailBox 1 received message "1" from 4, box 0

			Machine 7 and mailBox 0 sent request message jmovieManagerState,1 to the server Machine 1 Machine 7 and mailBox 0 received message "3" from 0, box 0

			Machine 7 and mailBox 1 sent request message emovieTechCV to the server Machine 2 Machine 7 and mailBox 1 received message "21" from 1, box 1

			Machine 7 and mailBox 0 sent request message jccBreakCount,1 to the server Machine 3
			Machine 7 and mailBox 1 sent request message kmgrMovieTechExit,0 to the server Machine 3 Machine 7 and mailBox 0 received message "4" from 2, box 0
			Machine 7 and mailBox 1 received message "0" from 1, box 0

			Machine 7 and mailBox 0 sent request message jallCustomerExitedCount,1 to the server Machine 0 Machine 7 and mailBox 0 received message "2" from 4, box 0

			Machine 7 and mailBox 1 sent request message bmovieTechMgrLock to the server Machine 1 Machine 7 and mailBox 1 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message jtotalCustomerInCount,1 to the server Machine 2
			Machine 7 and mailBox 1 sent request message kcommandToStart,0 to the server Machine 2 Machine 7 and mailBox 0 received message "2" from 1, box 0
			Machine 7 and mailBox 1 received message "0" from 4, box 0

			MovieTechnician waits for signal from Manager to start movie

			Machine 7 and mailBox 0 sent request message jtotalTicketClerkAmount,1 to the server Machine 4 Machine 7 and mailBox 0 received message "2" from 3, box 0

			Machine 7 and mailBox 1 sent request message fmovieTechMgrCV,movieTechMgrLock to the server Machine 0
			Machine 7 and mailBox 0 sent request message jtotalCCAmount,1 to the server Machine 0 Machine 7 and mailBox 0 received message "3" from 0, box 0

			Machine 7 and mailBox 0 sent request message jremainingCount,1 to the server Machine 1 Machine 7 and mailBox 0 received message "3" from 1, box 0

			Machine 7 and mailBox 0 sent request message jmgrMovieTechExit,1 to the server Machine 2 Machine 7 and mailBox 0 received message "5" from 2, box 0

			Machine 7 and mailBox 0 sent request message jticketClerkLineCount,5 to the server Machine 3 Machine 7 and mailBox 0 received message "6" from 3, box 0

			Machine 7 and mailBox 0 sent request message jticketClerkState,5 to the server Machine 4 Machine 7 and mailBox 0 received message "5" from 4, box 0

		
			..............................
			..............................
			..............................
			.......<1000s of Lines>.......
			..............................	
		
			
			Machine 7 and mailBox 0 sent request message bticketClerkLock3 to the server Machine 2 Machine 7 and mailBox 0 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message gticketClerkCV3,ticketClerkLock3 to the server Machine 3 Machine 7 and mailBox 0 received message "1" from 1, box 0

			Machine 7 and mailBox 0 sent request message cticketClerkLock3 to the server Machine 4 Machine 7 and mailBox 0 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message bticketClerkLock4 to the server Machine 0 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 0 sent request message gticketClerkCV4,ticketClerkLock4 to the server Machine 1 Machine 7 and mailBox 0 received message "1" from 4, box 0

			Machine 7 and mailBox 0 sent request message cticketClerkLock4 to the server Machine 2 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 0 sent request message bccLock0 to the server Machine 3 Machine 7 and mailBox 0 received message "1" from 2, box 0

			Machine 7 and mailBox 0 sent request message gccCV0,ccLock0 to the server Machine 4 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 0 sent request message cccLock0 to the server Machine 0 Machine 7 and mailBox 0 received message "1" from 2, box 0

			Machine 7 and mailBox 0 sent request message bccLock1 to the server Machine 1 Machine 7 and mailBox 0 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message gccCV1,ccLock1 to the server Machine 2 Machine 7 and mailBox 0 received message "1" from 1, box 0

			Machine 7 and mailBox 0 sent request message cccLock1 to the server Machine 3 Machine 7 and mailBox 0 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message bccLock2 to the server Machine 4 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 0 sent request message gccCV2,ccLock2 to the server Machine 0 Machine 7 and mailBox 0 received message "1" from 4, box 0

			Machine 7 and mailBox 0 sent request message cccLock2 to the server Machine 1 Machine 7 and mailBox 0 received message "1" from 3, box 0

			Machine 7 and mailBox 0 sent request message bccLock3 to the server Machine 2 Machine 7 and mailBox 0 received message "1" from 1, box 0

			Machine 7 and mailBox 0 sent request message gccCV3,ccLock3 to the server Machine 3 Machine 7 and mailBox 0 received message "1" from 2, box 0

			Machine 7 and mailBox 0 sent request message cccLock3 to the server Machine 4 Machine 7 and mailBox 0 received message "1" from 1, box 0

			Machine 7 and mailBox 0 sent request message bccLock4 to the server Machine 0 Machine 7 and mailBox 0 received message "1" from 4, box 0

			Machine 7 and mailBox 0 sent request message gccCV4,ccLock4 to the server Machine 1 Machine 7 and mailBox 0 received message "1" from 0, box 0

			Machine 7 and mailBox 0 sent request message cccLock4 to the server Machine 2 Machine 7 and mailBox 0 received message "1" from 4, box 0

			Machine 7 and mailBox 0 sent request message ccustomerManagerExitLock to the server Machine 3 Machine 7 and mailBox 0 received message "1" from 2, box 0

			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 583262420, idle 582054767, system 607420, user 600233
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 1928, sent 1928

			Cleaning up...
			aludra.usc.edu(4):


-------------------------------
	Part 2 - Test cases output
-------------------------------
>> Distributed Systems Test Case 1: Test to basic working of Locks on distributed systems	
			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(13): nachos -m 5 -x ../test/distributedLocksTest -T2 5
			
			Creating a Lock
			
			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			
			Lock Created by the server
			
			Acquiring Lock
			
			Machine 5 and mailBox 0 sent request message block1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Acquired Lock
			
			Releasing Lock
			
			Machine 5 and mailBox 0 sent request message clock1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Released Lock
			
			Deleting Lock
			
			Machine 5 and mailBox 0 sent request message dlock1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Deleted Lock
			
			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			
>> Distributed Systems Test Case 2: Test to basic working of Condition Wait and Signal with Locks
			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(15): nachos -m 5 -x ../test/distributedLockAndCVTest_1 -T2 5
			Creating a Lock
			
			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			
			Lock Created by the server
			
			Machine 5 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1
			
			CV Created by the server
			
			Acquiring Lock
			
			Machine 5 and mailBox 0 sent request message block1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Acquired Lock
			
			Waiting on the condition cv1 with lock1. Start client 2 to signal.
			
			Machine 5 and mailBox 0 sent request message fcv1,lock1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Waiting request processed by the server.
			
			Got signal from client 2.
			
			Releasing Lock
			
			Machine 5 and mailBox 0 sent request message clock1 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Released Lock
			
			Deleting Lock
			
			Machine 5 and mailBox 0 sent request message dlock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Deleted Lock
			
			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!
			______________________________________________________________
			> Client 2:
			______________________________________________________________
			Creating a Lock
			Machine 6 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Lock Created by the server

			Machine 6 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 2, box 0

			CV Created by the server

			Acquiring Lock

			Machine 6 and mailBox 0 sent request message block1 to the server Machine 3 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Acquired Lock

			Signaling on the condition cv1 with lock1.

			Machine 6 and mailBox 0 sent request message gcv1,lock1 to the server Machine 4 Machine 6 and mailBox 0 received message "1" from 2, box 0

			Client 2 has to signaled Client 1.

			Releasing Lock

			Machine 6 and mailBox 0 sent request message clock1 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Released Lock

			Deleting Lock

			Machine 6 and mailBox 0 sent request message dlock1 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Deleted Lock

			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!


>> Distributed Systems Test Case 3: Test to basic working of Condition Wait and Signal and Monitor Variables Get and Set with Locks 
			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(18): nachos -m 5 -x ../test/distributedLockAndCVAndMVTest_1 -T2 5
		
			Creating a Lock
			
			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			
			Lock Created by the server
			
			Machine 5 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1
			
			CV Created by the server
			
			Machine 5 and mailBox 0 sent request message jmv1,1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 3, box 1
			
			MV Created by the server
			
			Acquiring Lock
			
			Machine 5 and mailBox 0 sent request message block1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Acquired Lock
			
			Setting MV1 to 100.
			
			Machine 5 and mailBox 0 sent request message lmv1,0,100 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 3, box 0
			
			Waiting on the condition cv1 with lock1.
			
			Machine 5 and mailBox 0 sent request message fcv1,lock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Client 1 is waiting. Start client 2 to signal.
			
			Got signal from client 2.
			
			Releasing Lock
			
			Machine 5 and mailBox 0 sent request message clock1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Released Lock
			
			Deleting Lock
			
			Machine 5 and mailBox 0 sent request message dlock1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Deleted Lock
			
			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			______________________________________________________________
			> Client 2:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 6 -x ../test/distributedLockAndCVAndMVTest_2 -T2 5
			Creating a Lock
			
			Machine 6 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0
			
			Lock Created by the server
			
			Machine 6 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 2, box 0
			
			CV Created by the server
			
			Machine 6 and mailBox 0 sent request message jmv1,1 to the server Machine 3 Machine 6 and mailBox 0 received message "1" from 3, box 0
			
			MV Created by the server
			
			Machine 6 and mailBox 0 sent request message alock2 to the server Machine 4 Machine 6 and mailBox 0 received message "1" from 4, box 1
			
			Lock Created by the server
			
			Machine 6 and mailBox 0 sent request message ecv2 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 0, box 1
			
			CV Created by the server
			
			Acquiring Lock
			
			Machine 6 and mailBox 0 sent request message block2 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 4, box 0
			
			Acquired Lock
			
			Getting value from MV1.
			
			Machine 6 and mailBox 0 sent request message kmv1,0 to the server Machine 2 Machine 6 and mailBox 0 received message "100" from 3, box 0
			
			Waiting on the condition cv2 with lock2.
			
			Machine 6 and mailBox 0 sent request message fcv2,lock2 to the server Machine 3 Machine 6 and mailBox 0 received message "1" from 4, box 0
			
			Client 2 is waiting. Start client 3 to signal.
			
			Acquiring Lock
			
			Machine 6 and mailBox 0 sent request message block1 to the server Machine 4 Machine 6 and mailBox 0 received message "1" from 1, box 0
			
			Acquired Lock
			
			Got signal from Client 3.
			
			Machine 6 and mailBox 0 sent request message kmv1,0 to the server Machine 0 Machine 6 and mailBox 0 received message "300" from 3, box 0
			
			Setting MV to 200 and before signaling client 1.
			
			Machine 6 and mailBox 0 sent request message lmv1,0,200 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 3, box 0
			
			Signaling on the condition cv1 with lock1.
			
			Machine 6 and mailBox 0 sent request message gcv1,lock1 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 2, box 0
			
			Client 2 has to signaled Client 1.
			
			Releasing Lock
			
			Machine 6 and mailBox 0 sent request message clock1 to the server Machine 3 Machine 6 and mailBox 0 received message "1" from 1, box 0
			
			Machine 6 and mailBox 0 sent request message clock2 to the server Machine 4 Machine 6 and mailBox 0 received message "1" from 4, box 0
			
			Released Lock
			
			Deleting Lock
			
			Machine 6 and mailBox 0 sent request message dlock1 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 1, box 0
			
			Machine 6 and mailBox 0 sent request message dlock2 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 4, box 0
			
			Deleted Lock
			______________________________________________________________
			> Client 3:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 7 -x ../test/distributedLockAndCVAndMVTest_3 -T2 5
			
			Creating a Lock
			
			Machine 7 and mailBox 0 sent request message alock2 to the server Machine 1 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Lock Created by the server
			
			Machine 7 and mailBox 0 sent request message ecv2 to the server Machine 2 Machine 7 and mailBox 0 received message "1" f  rom 2, box 0
			
			CV Created by the server
			
			Machine 7 and mailBox 0 sent request message jmv1,1 to the server Machine 3 Machine 7 and mailBox 0 received message "1"   from 3, box 0
			
			MV Created by the server
			
			Acquiring Lock
			
			Machine 7 and mailBox 0 sent request message block2 to the server Machine 4 Machine 7 and mailBox 0 received message "1"   from 4, box 0
			
			Acquired Lock
			
			Acquiring Lock
			
			Machine 7 and mailBox 0 sent request message block1 to the server Machine 0 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Acquired Lock
			
			Setting MV1 to 300.
			
			Machine 7 and mailBox 0 sent request message lmv1,0,300 to the server Machine 1 Machine 7 and mailBox 0 received message   "1" from 3, box 0
			
			MV set by the server.
			
			Releasing Lock
			
			Machine 7 and mailBox 0 sent request message clock1 to the server Machine 2 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Released Lock
			
			Signaling on the condition cv2 with lock2.
			
			Machine 7 and mailBox 0 sent request message gcv2,lock2 to the server Machine 3 Machine 7 and mailBox 0 received message   "1" from 0, box 0
			
			Client 2 has to signaled Client 1.
			
			Releasing Lock
			
			Machine 7 and mailBox 0 sent request message clock2 to the server Machine 4 Machine 7 and mailBox 0 received message "1"   from 4, box 0
			
			Released Lock
			
			Deleting Lock
			
			Machine 7 and mailBox 0 sent request message dlock2 to the server Machine 0 Machine 7 and mailBox 0 received message "1"   from 4, box 0
			
			Deleted Lock
			
>> Distributed Systems Test Case 4: Test Case which handles all the available funtionalities of resources provided by single server with distributed servers and 5 concurrent client machines
			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 5 -x ../test/rpcTest1 -T2 5
			
			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			
			lock1 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message alock2 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1
			
			lock2 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message ecv1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 3, box 1
			
			cv1 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message ecv2 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 4, box 1
			
			cv2 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message jmv1,5 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 0, box 1
			
			mv1 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message jmv2,5 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			
			mv2 created in rpcClient1.
			
			Acquiring lock1
			
			Machine 5 and mailBox 0 sent request message block1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Acquiring lock2
			
			Machine 5 and mailBox 0 sent request message block2 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 2, box 0
			
			Machine 5 and mailBox 0 sent request message lmv2,0,1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			MV2 index: 0 set to 1 by rpcClient1
			
			Waiting on CV2 Lock2 for signal from rpcClient4
			
			Note: Now, please run rpcClient2
			
			Machine 5 and mailBox 0 sent request message fcv2,lock2 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 2, box 0
			
			Got Signal on CV2 Lock2 from rpcClient4 in rpcClient1
			
			Machine 5 and mailBox 0 sent request message kmv2,1 to the server Machine 1 Machine 5 and mailBox 0 received message "5" from 1, box 0
			
			Value of MV2 index 1 is 5 in rpcClient1
			
			Waiting on CV1 Lock1 to get signal from rpcClient3
			
			Machine 5 and mailBox 0 sent request message fcv1,lock1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Got Signal on CV1 Lock1 from rpcClient3
			
			Machine 5 and mailBox 0 sent request message lmv1,3,402 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 0, box 0
			
			MV1 index: 3 set to 402 in rpcClient1
			
			Machine 5 and mailBox 0 sent request message hcv1,lock1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 3, box 0
			
			Broadcasted on cv1 and lock1 to rpcClient2 and rpcClient3
			
			Machine 5 and mailBox 0 sent request message clock1 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Released lock1
			
			
			Machine 5 and mailBox 0 sent request message clock2 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 2, box 0
			
			Released lock2
			
			Machine 5 and mailBox 0 sent request message dlock1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Deleted Lock1
			
			Machine 5 and mailBox 0 sent request message dlock2 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 2, box 0
			
			Deleted Lock2
			
			Machine 5 and mailBox 0 sent request message icv1 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 3, box 0
			
			Deleted CV1
			
			Machine 5 and mailBox 0 sent request message icv2 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 4, box 0
			
			Deleted CV2
			
			Machine 5 and mailBox 0 sent request message mmv1 to the server Machine 1 Machine 5 and mailBox 0 received message "ResourceNotFound" from 0, box 0
			
			Deleted MV1
			
			Machine 5 and mailBox 0 sent request message mmv2 to the server Machine 2 Machine 5 and mailBox 0 received message "ResourceNotFound" from 1, box 0
			
			Deleted MV2
			
			All resources requested to be deleted
			
			Machine 5 and mailBox 0 sent request message alock3 to the server Machine 3 Machine 5 and mailBox 0 received message "2" from 3, box 0
			
			lock3 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message ecv3 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 4, box 0
			
			cv3 created in rpcClient1.
			
			Machine 5 and mailBox 0 sent request message jmv3,5 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 0, box 0
			
			mv3 created in rpcClient1
			
			Acquiring lock3
			
			Machine 5 and mailBox 0 sent request message block3 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Machine 5 and mailBox 0 sent request message lmv3,3,1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 3, box 0
			
			MV3 index: 3 set to 1 by rpcClient1
			
			Machine 5 and mailBox 0 sent request message gcv3,lock3 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 2, box 0
			Sinaled on cv3 and lock3 to rpcClient5
			
			Releasing lock3
			
			Machine 5 and mailBox 0 sent request message clock3 to the server Machine 4 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Machine 5 and mailBox 0 sent request message dlock3 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 1, box 0
			
			Machine 5 and mailBox 0 sent request message mmv3 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 3, box 0
			
			Machine 5 and mailBox 0 sent request message icv3 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 0
			
			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			______________________________________________________________
			> Client 2:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 6 -x ../test/rpcTest2 -T2 5
			
			Machine 6 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 6 and mailBox 0 received message "1   " from 1, box 0
			
			Machine 6 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 6 and mailBox 0 received message "1"    from 2, box 0
			
			Machine 6 and mailBox 0 sent request message jmv1,5 to the server Machine 3 Machine 6 and mailBox 0 received message "1   " from 3, box 0
			
			Lock1 created in rpcClient2
			
			cv1 created in rpcClient2
			
			mv1 created in rpcClient2
			
			Acquiring lock1 in rpcClient2
			
			Machine 6 and mailBox 0 sent request message block1 to the server Machine 4 Machine 6 and mailBox 0 received message "1   " from 1, box 0
			
			Waiting on CV1 Lock1 to get broadcast signal from rpcClient1
			
			Note: Now run rpcClient3
			
			Machine 6 and mailBox 0 sent request message fcv1,lock1 to the server Machine 0 Machine 6 and mailBox 0 received messag   e "1" from 1, box 0
			
			Got Broadcast on CV1 Lock1 from rpcClient1
			
			Machine 6 and mailBox 0 sent request message kmv1,3 to the server Machine 1 Machine 6 and mailBox 0 received message "4   02" from 0, box 0
			
			Value of MV1 index 3 set by rpcClient1 is 402
			
			Machine 6 and mailBox 0 sent request message clock1 to the server Machine 2 Machine 6 and mailBox 0 received message "1   " from 1, box 0
			
			Machine 6 and mailBox 0 sent request message dlock1 to the server Machine 3 Machine 6 and mailBox 0 received message "1   " from 1, box 0
			
			Deleted Lock1

			Machine 6 and mailBox 0 sent request message mmv1 to the server Machine 4 Machine 6 and mailBox 0 received message "402   " from 0, box 0

			Deleted MV1

			Machine 6 and mailBox 0 sent request message icv1 to the server Machine 0 Machine 6 and mailBox 0 received message "1"    from 3, box 0

			Deleted CV1

			main is the last thread in ALL the processes - Thus Halting the System

			Machine halting!
			______________________________________________________________
			> Client 3:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 7 -x ../test/rpcTest3 -T2 5
			
			Machine 7 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Machine 7 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 7 and mailBox 0 received message "1" f  rom 2, box 0
			
			Machine 7 and mailBox 0 sent request message jmv1,5 to the server Machine 3 Machine 7 and mailBox 0 received message "1"   from 3, box 0
			
			Acquiring lock1 in rpcClient3
			
			Machine 7 and mailBox 0 sent request message block1 to the server Machine 4 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Machine 7 and mailBox 0 sent request message gcv1,lock1 to the server Machine 0 Machine 7 and mailBox 0 received message   "1" from 3, box 0
			
			Waiting on CV1 Lock1 to get broadcast signal from rpcClient1
			
			Note: Now run rpcClient3
			
			Machine 7 and mailBox 0 sent request message fcv1,lock1 to the server Machine 1 Machine 7 and mailBox 0 received message   "1" from 1, box 0
			
			Got Broadcast on CV1 Lock1 from rpcClient1
			
			Machine 7 and mailBox 0 sent request message kmv1,3 to the server Machine 2 Machine 7 and mailBox 0 received message "40  2" from 0, box 0
			
			Value of MV1 index 3 set by rpcClient1 is 402
			
			Machine 7 and mailBox 0 sent request message clock1 to the server Machine 3 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Machine 7 and mailBox 0 sent request message dlock1 to the server Machine 4 Machine 7 and mailBox 0 received message "1"   from 1, box 0
			
			Deleted Lock1

			Machine 7 and mailBox 0 sent request message mmv1 to the server Machine 0 Machine 7 and mailBox 0 received message "Reso  urceNotFound" from 0, box 0

			Deleted MV1

			Machine 7 and mailBox 0 sent request message icv1 to the server Machine 1 Machine 7 and mailBox 0 received message "1" f  rom 3, box 0

			Deleted CV1

			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!
			______________________________________________________________
			> Client 4:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 8 -x ../test/rpcTest5 -T2 5
			
			Machine 8 and mailBox 0 sent request message alock2 to the server Machine 1 Machine 8 and mailBox 0 received message "1"   from 1, box 0
			
			lock2 created in rpcClient4.
			
			cv1 created in rpcClient4.
			
			Machine 8 and mailBox 0 sent request message ecv2 to the server Machine 2 Machine 8 and mailBox 0 received message "1" f  rom 2, box 0
			
			cv2 created in rpcClient4.
			
			Machine 8 and mailBox 0 sent request message jmv2,5 to the server Machine 3 Machine 8 and mailBox 0 received message "1"   from 3, box 0
			
			mv2 created in rpcClient2.
			
			Machine 8 and mailBox 0 sent request message block2 to the server Machine 4 Machine 8 and mailBox 0 received message "1"   from 2, box 0
			
			
			Acquired lock2.
			
			Machine 8 and mailBox 0 sent request message kmv2,0 to the server Machine 0 Machine 8 and mailBox 0 received message "1"   from 1, box 0
			
			Value of MV2 index 0 set by rpcClient4 is 1
			Machine 8 and mailBox 0 sent request message lmv2,1,5 to the server Machine 1 Machine 8 and mailBox 0 received message "  1" from 1, box 0
			
			MV2 index: 1 set to 5 by rpcClient4
			
			Signalling on CV2 Lock2 to rpcClient1
			
			Machine 8 and mailBox 0 sent request message gcv2,lock2 to the server Machine 2 Machine 8 and mailBox 0 received message   "1" from 4, box 0
			
			Machine 8 and mailBox 0 sent request message clock2 to the server Machine 3 Machine 8 and mailBox 0 received message "1"   from 2, box 0
			
			Released lock2
			
			Machine 8 and mailBox 0 sent request message dlock2 to the server Machine 4 Machine 8 and mailBox 0 received message "1"   from 2, box 0
			
			Deleted Lock2

			Machine 8 and mailBox 0 sent request message mmv2 to the server Machine 0 Machine 8 and mailBox 0 received message "5" f  rom 1, box 0

			Deleted MV2

			Machine 8 and mailBox 0 sent request message icv2 to the server Machine 1 Machine 8 and mailBox 0 received message "1" f  rom 4, box 0

			Deleted CV2

			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			______________________________________________________________
			> Client 5:
			______________________________________________________________
			aludra.usc.edu(16): nachos -m 9 -x ../test/rpcTest4 -T2 5
			Machine 9 and mailBox 0 sent request message alock3 to the server Machine 1 Machine 9 and mailBox 0 received message "2"   from 1, box 1
			
			Machine 9 and mailBox 0 sent request message ecv3 to the server Machine 2 Machine 9 and mailBox 0 received message "1" f  rom 2, box 1
			
			Machine 9 and mailBox 0 sent request message jmv3,5 to the server Machine 3 Machine 9 and mailBox 0 received message "1"   from 3, box 1
			
			Acquiring lock3 in rpcclient5
			
			Machine 9 and mailBox 0 sent request message block3 to the server Machine 4 Machine 9 and mailBox 0 received message "1"   from 1, box 0
			
			Machine 9 and mailBox 0 sent request message fcv3,lock3 to the server Machine 0 Machine 9 and mailBox 0 received message   "1" from 1, box 0
			
			Got Signal on cv3 lock3 from rpcClient1
			
			Machine 9 and mailBox 0 sent request message kmv3,3 to the server Machine 1 Machine 9 and mailBox 0 received message "1"   from 3, box 0
			
			Value of mv3 index 3 set by rpcClient1 is 1
			
			Machine 9 and mailBox 0 sent request message clock3 to the server Machine 2 Machine 9 and mailBox 0 received message "1"   from 1, box 0
			
			Machine 9 and mailBox 0 sent request message dlock3 to the server Machine 3 Machine 9 and mailBox 0 received message "1"   from 1, box 0
			
			Deleted Lock3

			Machine 9 and mailBox 0 sent request message mmv3 to the server Machine 4 Machine 9 and mailBox 0 received message "Lock  ResourceNotFound" from 3, box 0

			Deleted MV3

			Machine 9 and mailBox 0 sent request message icv3 to the server Machine 0 Machine 9 and mailBox 0 received message "1" f  rom 2, box 0

			Deleted CV3

			main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			
>> Distributed Systems Special Test 1: This Test Case sends very large number of Create reqestes to the servers randomly choosen while sending the request. The server which receives the first create request will actually create the resource and use Total ordering so that others servers do not create the same resource.

--> SpecialTest1 sample output:

client 1 and client 2 terminal(both will have similar output since they send same requests to the server):

			______________________________________________________________
			> Client 1 and 2:
			______________________________________________________________
			Sending Create Lock request
			Sending Create Lock request
				.
				.
			Sending Create Lock request
			Sending Create Lock request
			Sending Create Lock request
			Machine 6 and mailBox 1 sent request message alock1 to the server Machine 1
			Machine 6 and mailBox 2 sent request message alock1 to the server Machine 1
				.
				.
			Machine 6 and mailBox 3 sent request message alock1 to the server Machine 1
			Machine 6 and mailBox 4 sent request message alock1 to the server Machine 1

			Lock Created or found created already by the server.
			Lock Created or found created already by the server.
				.	
				.
			Lock Created or found created already by the server.
			Lock Created or found created already by the server.

			Sending Create Monitor Variable request
			Sending Create Monitor Variable request

			Sending Create Condition Variable request
			Sending Create Condition Variable request
			Sending Create Condition Variable request

			Monitor Variable Created or found created already by the server.

			..............................
			..............................
			.......<100s of Lines>.......
			..............................	

			Machine 6 and mailBox 56 sent request message jmv1,5 to the server Machine 3 Machine 6 and mailBox 17 received message "1" from 4, box 0
			Monitor Variable Created or found created already by the server.
			Sending Create Condition Variable request
			Machine 6 and mailBox 42 received message "1" from 4, box 0
			Monitor Variable Created or found created already by the server.
			Sending Create Condition Variable request
			Machine 6 and mailBox 52 sent request message ecv1 to the server Machine 0 Machine 6 and mailBox 27 received message "1" from 0, box 0

			Condition Variable Created or found created already by the server.
			Machine 6 and mailBox 51 received message "1" from 0, box 0
			Condition Variable Created or found created already by the server.
			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!


>> Distributed Systems Special Test 2: This test case has a two simple user program one creates lock, cv and mv and waits on a condition and other program also creates the same and signals to program 1. Both this user program are execcuted 60 time and hence all these requests are bombarded to server randomly. This test case will validate working of all the systems calls and distributed mutual exclusion between servers.

			______________________________________________________________
			> Client 1:
			______________________________________________________________
			Machine 5 and mailBox 0 sent request message jmv1,1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1
			Machine 5 and mailBox 0 sent request message lmv1,0,0 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 1, box 0
			Creating a Lock
				.
				.
			Creating a Lock
			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 3, box 1
			Lock Created or found created already by the server.
				.
				.
			Machine 5 and mailBox 1 sent request message alock1 to the server Machine 3 Machine 5 and mailBox 1 received message "1" from 4, box 0
			Lock Created or found created already by the server.

			Monitor Variable Created or found created already by the server.
				.
				.
			Machine 5 and mailBox 6 sent request message jmv1,1 to the server Machine 4 Machine 5 and mailBox 56 received message "1" from 4, box 0
			Lock Created or found created already by the server.
			Machine 5 and mailBox 57 sent request message block1 to the server Machine 4

			Machine 5 and mailBox 58 sent request message block1 to the server Machine 4 Machine 5 and mailBox 36 received message "1" from 1, box 0
			#################################
			Machine 5 and mailBox 36 sent request message kmv1,0 to the server Machine 0 Machine 5 and mailBox 36 received message "5" from 1, box 0
			Current MV Value: 5
			#################################

			..............................
			..............................
			.......<100s of Lines>.......
			..............................	

			Machine 5 and mailBox 51 sent request message kmv1,0 to the server Machine 1 Machine 5 and mailBox 51 received message "300" from 1, box 0

			Current MV Value: 300
			Machine 5 and mailBox 51 sent request message clock1 to the server Machine 2 Machine 5 and mailBox 51 received message "1" from 3, box 0
			Lock released by the server.
				.
				.
			Machine 5 and mailBox 49 sent request message clock1 to the server Machine 0 Machine 5 and mailBox 16 received message "1" from 3, box 0
			Machine 5 and mailBox 49 received message "1" from 3, box 0

			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			______________________________________________________________
			> Client 2:
			______________________________________________________________

			aludra.usc.edu(7): nachos -m 8 -x ../test/execSpecialTest2_2 -T2 5

			Machine 8 and mailBox 0 sent request message jmv1,1 to the server Machine 1 Machine 8 and mailBox 0 received message "1" from 1, box 0
			Machine 8 and mailBox 0 sent request message lmv1,0,0 to the server Machine 2 Machine 8 and mailBox 0 received message "1" from 1, box 0
			Creating a Lock
				.
				.
			Creating a Lock

			Machine 8 and mailBox 0 sent request message alock1 to the server Machine 2 Machine 8 and mailBox 0 received message "1" from 3, box 0
			Lock Created or found created already by the server.
				.
				.
			Machine 8 and mailBox 1 sent request message alock1 to the server Machine 3
			Lock Created or found created already by the server.

			Machine 8 and mailBox 55 sent request message jmv1,1 to the server Machine 0 Machine 8 and mailBox 40 received message "1" from 1, box 0
			Machine 8 and mailBox 56 sent request message jmv1,1 to the server Machine 0 Machine 8 and mailBox 40 received message "1" from 1, box 0
				.
				.
			Monitor Variable Created or found created already by the server.
			Monitor Variable Created or found created already by the server.
				.
				.
			Machine 8 and mailBox 21 sent request message ecv1 to the server Machine 0
			Machine 8 and mailBox 46 sent request message ecv1 to the server Machine 0 Machine 8 and mailBox 21 received message "1" from 4, box 0
				.
				.
			Condition Variable Created or found created already by the server.
				.
				.
			Machine 8 and mailBox 12 sent request message block1 to the server Machine 3 Machine 8 and mailBox 18 received message "1" from 4, box 0
			Machine 8 and mailBox 13 sent request message block1 to the server Machine 3 Machine 8 and mailBox 18 received message "1" from 4, box 0

			..............................
			..............................
			.......<100s of Lines>.......
			..............................	

			
			#################################
			Machine 8 and mailBox 23 received message "1" from 3, box 0
			Lock released by the server.
			Machine 8 and mailBox 38 sent request message kmv1,0 to the server Machine 0 Machine 8 and mailBox 38 received message "300" from 1, box 0
			Found Current MV Value to be: 300. Sending signal to client 1.
			#################################

			Machine 8 and mailBox 38 sent request message gcv1,lock1 to the server Machine 1 Machine 8 and mailBox 38 received message "1" from 4, box 0
			Machine 8 and mailBox 38 sent request message clock1 to the server Machine 2 Machine 8 and mailBox 38 received message "1" from 3, box 0
			Lock released by the server.
			 
			 ProcessThread is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			
>> Distributed Systems Negative Test Case 1: Test to Acquire a lock which is not Created

			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(26): nachos -m 5 -x ../test/distributedNegativeTest_1 -T2 4

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Lock Created by the server.

			Trying to acquire lock which does not exist.

			Machine 5 and mailBox 0 sent request message block2 to the server Machine 2 Machine 5 and mailBox 0 received message "-1WrongResourceName" from 2, box 1

			Server failed to Acquire lock

			Lock does not exist. Failed to Acquire Lock. Exiting Program

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

>> Distributed Systems Negative Test Case 2: Test to Release a lock which is not Acquired
			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(28): nachos -m 5 -x ../test/distributedNegativeTest_2 -T2 4

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Lock Created by the server.

			Trying to release lock before acquiring it.

			Machine 5 and mailBox 0 sent request message clock1 to the server Machine 2 Machine 5 and mailBox 0 received message "-1NotLockOwner" from 1, box 0

			Server failed to Release lock

			Error. Not the lock owner. Failed to Release Lock. Exiting Program

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!
			
>> Distributed Systems Negative Test Case 3: Test to Access Monitor Variable at index out of bound			

			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(30): nachos -m 5 -x ../test/distributedNegativeTest_3 -T2 4

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Lock Created by the server.

			Creating a MV

			Machine 5 and mailBox 0 sent request message jmv1,5 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1

			MV Created by the server.

			Acquiring lock to access Monitor Variable

			Machine 5 and mailBox 0 sent request message block1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Lock acquired by the server.

			Setting MV to 100

			Machine 5 and mailBox 0 sent request message lmv1,1,100 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 2, box 0

			MV set successfully.

			Trying to fetch value at invalid mv Index : 21

			Machine 5 and mailBox 0 sent request message kmv1,20 to the server Machine 1 Machine 5 and mailBox 0 received message "-1Invalid size" from 2, box 0

			Server failed to GetMV

			Invalid mvIndex, Failed to fetch value at given index. Exiting Program

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

>> Distributed Systems Negative Test Case 4: Test to Signal on a condition on which no body is waiting.

			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(41): nachos -m 5 -x ../test/distributedNegativeTest_4_1 -T2 4

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Lock Created by the server.

			Creating a CV

			Machine 5 and mailBox 0 sent request message ecv1 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1

			CV Created by the server.
			Acquiring Lock.

			Machine 5 and mailBox 0 sent request message block1 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Lock acquired.

			Calling Wait on lock1 and cv1.

			Machine 5 and mailBox 0 sent request message fcv1,lock1 to the server Machine 0

			______________________________________________________________
			> Client 2:
			______________________________________________________________

			aludra.usc.edu(17): nachos -m 5 -x ../test/distributedNegativeTest_4_2 -T2 4

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock2 to the server Machine 1 Machine 5 and mailBox 0 received message "2" from 1, box 1

			Lock Created by the server.

			Creating a CV

			Machine 5 and mailBox 0 sent request message ecv2 to the server Machine 2 Machine 5 and mailBox 0 received message "2" from 2, box 1

			CV Created by the server.
			Acquiring Lock.

			Machine 5 and mailBox 0 sent request message block2 to the server Machine 3 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Lock acquired.

			Trying to Signal on which no body is waiting.

			Machine 5 and mailBox 0 sent request message gcv2,lock2 to the server Machine 0 Machine 5 and mailBox 0 received message "-1 No Client Waiting" from 2, box 0

			Server failed to Signal for the given condition

			Error, failed to Signal. Exiting Program.

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

>> Distributed Systems Negative Test Case 5: Test to Set Monitor Variable at invalid index

			______________________________________________________________
			> Client 1:
			______________________________________________________________
			aludra.usc.edu(21): nachos -m 5 -x ../test/distributedNegativeTest_5 -T2 2

			Creating a Lock

			Machine 5 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Lock Created by the server.

			Creating a CV

			Creating a MV

			Machine 5 and mailBox 0 sent request message jmv1,3 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 0, box 1

			MV Created by the server.

			Deleting MV

			Machine 5 and mailBox 0 sent request message mmv1 to the server Machine 1 Machine 5 and mailBox 0 received message "ResourceNotFound" from 0, box 0

			MV deleted successfully.

			Acquiring Lock.

			Machine 5 and mailBox 0 sent request message block1 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 1, box 0

			Lock acquired.

			Setting MV to 100

			Machine 5 and mailBox 0 sent request message lmv1,5,100 to the server Machine 1 Machine 5 and mailBox 0 received message "-1Invalid size" from 0, box 0

			Server failed to SetMV

			Failed to Set MV. Exiting Program

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!


-------------------------------
	Part 3 - Extra Credit
-------------------------------
>> Test Case 1: Test for the servers deciding the lock ownership on determining dead client(s).	
			______________________________________________________________
			> Server 1:
			______________________________________________________________
			aludra.usc.edu(119): nachos -m 0 -s -T3 3

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#alock1,3348668698" from 1, box 0

			I don't have the Lock lock1, return a No to machine 1 and mailbox 0

			 ack1: !alock1,3348668698
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I don't have the Lock lock1, return a No to machine 2 and mailbox 0

			 ack1: !block1
			Server Waiting to receive
			Got "ecv1" from 3, box 0

			Forking The Server Ping Thread
			Server Machine 0 MailBox 0 Sending DYH Message #ecv1,3348687770 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #ecv1,3348687770 to machine id = 2
			Server Waiting to receive
			Got "!ecv1,3348687770" from 1, box 1

			In handle no response for msg cv1,3348687770
			Server Waiting to receive
			Got "!ecv1,3348687770" from 2, box 1

			In handle no response for msg cv1,3348687770

			Creating CV cv1
			CV Created at server, return CVID: 1 to machineID: 0 and mailBox 0
			Sent "1" to outPktHdr.to: 3,outMailHdr.to: 0
			Server Waiting to receive
			Got "#fcv1" from 1, box 0

			I have the CV cv1, so return ID to machineID 1 and mailBox 0
			Server Waiting to receive
			Got "fcv1,lock1" from 3, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #xlock1,3,0 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #xlock1,3,0 to machine id = 2
			Server Waiting to receive
			Got "$xlock1,1,*,3,0" from 1, box 1
			Server Waiting to receive
			Got "!xlock1" from 2, box 1

			In handle no response for msg lock1
			Sent "clock1,*" to outPktHdr.to: 1,outMailHdr.to: 0
			Machine Id 3 and mailBox 0 put to wait queue of CV and Lock lock1
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I don't have the Lock lock1, return a No to machine 2 and mailbox 0

			 ack1: !block1
			Server Waiting to receive
			Got "ecv1" from 4, box 0
			CV cv1 already Created, return MVID to machine 4 and mailBox 0
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#gcv1" from 1, box 0

			I have the CV cv1, so return ID to machineID 1 and mailBox 0
			Server Waiting to receive
			Got "gcv1,lock1" from 4, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #ylock1,4,0 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #ylock1,4,0 to machine id = 2
			Server Waiting to receive
			Got "$ylock1,1,*,4,0" from 1, box 1
			Server Waiting to receive
			Got "!ylock1" from 2, box 1

			In handle no response for msg lock1
			Machine Id 4 and mailBox 0 signalled using CV: cv1 and Lock lock1
			Sent "block1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#clock1" from 2, box 0

			I don't have the Lock lock1, return a No to machine 2 and mailbox 0

			 ack1: !clock1
			Server Waiting to receive
			Got "block1" from 4, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #block1 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #block1 to machine id = 2
			Server Waiting to receive
			Got "$block1,1" from 1, box 1
			Server Waiting to receive
			Got "!block1" from 2, box 1

			In handle no response for msg lock1
			Sent "block1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#jmv1,0,3351257758" from 1, box 0

			I don't have the MV mv1, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#alock2,3351267647" from 2, box 0

			I don't have the Lock lock2, return a No to machine 2 and mailbox 0

			 ack1: !alock2,3351267647
			Server Waiting to receive
			Got "block2" from 5, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #block2 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #block2 to machine id = 2
			Server Waiting to receive
			Got "!block2" from 1, box 1

			In handle no response for msg lock2
			Server Waiting to receive
			Got "$block2,1" from 2, box 1
			Sent "block2" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ecv2,3351287639" from 1, box 0

			I don't have the CV cv2, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#fcv2" from 2, box 0

			I don't have the CV cv2, return a No to machine 2 and mailbox 0
			Server Waiting to receive
			Got "#xlock2,5,0" from 1, box 0

			I don't have the Lock lock2, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "block2" from 6, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #block2 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #block2 to machine id = 2
			Server Waiting to receive
			Got "!block2" from 1, box 1

			In handle no response for msg lock2
			Server Waiting to receive
			Got "$block2,1" from 2, box 1
			Sent "block2" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			Got "#clock2" from 1, box 0

			I don't have the Lock lock2, return a No to machine 1 and mailbox 0

			 ack1: !clock2
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I don't have the Lock lock1, return a No to machine 2 and mailbox 0

			 ack1: !block1
			Server Waiting to receive
			Got "jmv1,0" from 6, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #jmv1,0,3363097617 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #jmv1,0,3363097617 to machine id = 2
			Server Waiting to receive
			Got "$jmv1,1" from 1, box 1
			Server Waiting to receive
			Got "!jmv1,3363097617" from 2, box 1

			In handle no response for msg mv1,3363097617
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#alock2,3363107582" from 1, box 0

			I don't have the Lock lock2, return a No to machine 1 and mailbox 0

			 ack1: !alock2,3363107582
			Server Waiting to receive
			Got "ecv2" from 6, box 0
			Server Machine 0 MailBox 0 Sending DYH Message #ecv2,3363127543 to machine id = 1
			Server Machine 0 MailBox 0 Sending DYH Message #ecv2,3363127543 to machine id = 2
			Server Waiting to receive
			Got "$ecv2,1" from 1, box 1
			Server Waiting to receive
			Got "!ecv2,3363127543" from 2, box 1

			In handle no response for msg cv2,3363127543
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ylock2,6,0" from 1, box 0

			I don't have the Lock lock2, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			==============================================================================================
			==============================================================================================

			______________________________________________________________
			Server 2:
			______________________________________________________________

			aludra.usc.edu(52): nachos -m 1 -s -T3 3

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "alock1" from 3, box 0

			Forking The Server Ping Thread
			Server Machine 1 MailBox 0 Sending DYH Message #alock1,3348668698 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #alock1,3348668698 to machine id = 2
			Got "!alock1,3348668698" from 0, box 1

			In handle no response for msg lock1,3348668698
			Server Waiting to receive
			Server Waiting to receive
			Got "!alock1,3348668698" from 2, box 1

			In handle no response for msg lock1,3348668698

			Creating Lock lock1
			Lock lock1 created for Machine ID 1 and mailBox 0
			Sent "1" to outPktHdr.to: 3,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I have the Lock lock1, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "block1" from 3, box 0
			Free Lock lock1 Found for Machine ID 3 and mailBox 0
			Sent "1" to outPktHdr.to: 3,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ecv1,3348687770" from 0, box 0

			I don't have the CV cv1, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "fcv1,lock1" from 3, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #fcv1 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #fcv1 to machine id = 2
			Server Waiting to receive
			Got "$fcv1,1" from 0, box 1
			Server Waiting to receive
			Got "!fcv1" from 2, box 1

			In handle no response for msg cv1
			Sent "fcv1,lock1" to outPktHdr.to: 0,outMailHdr.to: 0
			Server Waiting to receive
			Got "#xlock1,3,0" from 0, box 0

			I have the Lock lock1, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "clock1,*" from 3, box 0
			Lock lock1 Released by Machine ID 3 + mailBox 0 and setting lock Free as Lock wait queue empty
			Server Waiting to receive
			Got "alock1" from 4, box 0
			Lock lock1 already Created, return LockID to machine 4 and mailBox 0
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I have the Lock lock1, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "block1" from 4, box 0
			Free Lock lock1 Found for Machine ID 4 and mailBox 0
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "gcv1,lock1" from 4, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #gcv1 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #gcv1 to machine id = 2
			Server Waiting to receive
			Got "$gcv1,1" from 0, box 1
			Server Waiting to receive
			Got "!gcv1" from 2, box 1

			In handle no response for msg cv1
			Sent "gcv1,lock1" to outPktHdr.to: 0,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ylock1,4,0" from 0, box 0

			I have the Lock lock1, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "block1" from 3, box 0
			Lock lock1 Busy so put Machine ID 3 + mailBox 0 to wait queue
			Server Waiting to receive
			Got "#clock1" from 2, box 0

			I have the Lock lock1, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "clock1" from 4, box 0
			Lock lock1 Released by Machine ID 4 + mailBox 0 and setting machine 3 and mailbox 0 as lock owner
			Machind 1 MailBox 0 sends message 1 to Client Machine 3 MailBox 0
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block1" from 0, box 0

			I have the Lock lock1, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "block1" from 4, box 0
			Lock lock1 Busy so put Machine ID 4 + mailBox 0 to wait queue
			Server Waiting to receive
			Got "jmv1,0" from 5, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #jmv1,0,3351257758 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #jmv1,0,3351257758 to machine id = 2
			Server Waiting to receive
			Got "!jmv1,3351257758" from 0, box 1

			In handle no response for msg mv1,3351257758
			Server Waiting to receive
			Got "!jmv1,3351257758" from 2, box 1

			In handle no response for msg mv1,3351257758

			Creating MV mv1
			MV mv1 created for Machine Id 1 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#alock2,3351267647" from 2, box 0

			I don't have the Lock lock2, return a No to machine 2 and mailbox 0

			 ack1: !alock2,3351267647
			Server Waiting to receive
			Got "#block2" from 0, box 0

			I don't have the Lock lock2, return a No to machine 0 and mailbox 0

			 ack1: !block2
			Server Waiting to receive
			Got "ecv2" from 5, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #ecv2,3351287639 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #ecv2,3351287639 to machine id = 2
			Server Waiting to receive
			Got "!ecv2,3351287639" from 0, box 1

			In handle no response for msg cv2,3351287639
			Server Waiting to receive
			Got "!ecv2,3351287639" from 2, box 1

			In handle no response for msg cv2,3351287639

			Creating CV cv2
			CV Created at server, return CVID: 1 to machineID: 1 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#fcv2" from 2, box 0

			I have the CV cv2, so return ID to machineID 2 and mailBox 0
			Server Waiting to receive
			Got "fcv2,lock2" from 5, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #xlock2,5,0 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #xlock2,5,0 to machine id = 2
			Server Waiting to receive
			Got "!xlock2" from 0, box 1

			In handle no response for msg lock2
			Server Waiting to receive
			Got "$xlock2,1,*,5,0" from 2, box 1
			Sent "clock2,*" to outPktHdr.to: 2,outMailHdr.to: 0
			Machine Id 5 and mailBox 0 put to wait queue of CV and Lock lock2
			Server Waiting to receive
			Sent "ping" to outPktHdr.to: 3,outMailHdr.to: 39

			Client with Machine Id [ 3 ] has died

			The client who died owned a lock

			There is a server waiting to acquire this lock

			Making the machine [ 4 ] as the new Lock Owner
			Sent "1" to outPktHdr.to: 4,outMailHdr.to: 0
			Sent "ping" to outPktHdr.to: 4,outMailHdr.to: 39

			Client with Machine Id [ 4 ] has died

			The client who died owned a lock

			No Client(s) are waiting to acquire Lock 1

			Thus Making the lock status as FREE
			Got "jmv1,0" from 6, box 0
			MV mv1 already Created, return MV to machine 6 and mailBox 0
			MV mv1 already Created, return MVID to machine 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block2" from 0, box 0

			I don't have the Lock lock2, return a No to machine 0 and mailbox 0

			 ack1: !block2
			Server Waiting to receive
			Got "clock2" from 6, box 0

			I dnt have the lock so forward message

			 Release - Key = clock2

			Acquired pend req lock

			I dnt have the lock so forward message - 2
			Server Machine 1 MailBox 0 Sending DYH Message #clock2 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #clock2 to machine id = 2
			Server Waiting to receive
			Got "!clock2" from 0, box 1

			In handle no response for msg lock2
			Server Waiting to receive
			Got "$clock2,1" from 2, box 1
			Sent "clock2" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			Got "alock1" from 6, box 0
			Lock lock1 already Created, return LockID to machine 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block1" from 2, box 0

			I have the Lock lock1, return LockID to machine 2 and mailBox 0
			Server Waiting to receive
			Got "block1" from 6, box 0
			Free Lock lock1 Found for Machine ID 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#jmv1,0,3363097617" from 0, box 0

			I have the MV mv1, returning MVInfo to Machine Id 0 and mailBox 0
			Server Waiting to receive
			Got "alock2" from 6, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #alock2,3363107582 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #alock2,3363107582 to machine id = 2
			Server Waiting to receive
			Got "!alock2,3363107582" from 0, box 1

			In handle no response for msg lock2,3363107582
			Server Waiting to receive
			Got "$alock2,1" from 2, box 1
			Server Waiting to receive
			Got "#ecv2,3363127543" from 0, box 0

			I have the CV cv2, so return ID to machineID 0 and mailBox 0
			Server Waiting to receive
			Got "gcv2,lock2" from 6, box 0
			Server Machine 1 MailBox 0 Sending DYH Message #ylock2,6,0 to machine id = 0
			Server Machine 1 MailBox 0 Sending DYH Message #ylock2,6,0 to machine id = 2
			Server Waiting to receive
			Got "!ylock2" from 0, box 1

			In handle no response for msg lock2
			Server Waiting to receive
			Got "$ylock2,1,*,6,0" from 2, box 1
			Machine Id 6 and mailBox 0 signalled using CV: cv2 and Lock lock2
			Sent "block2" to outPktHdr.to: 2,outMailHdr.to: 0
			Server Waiting to receive
			Sent "ping" to outPktHdr.to: 6,outMailHdr.to: 39

			Client with Machine Id [ 6 ] has died

			The client who died owned a lock

			No Client(s) are waiting to acquire Lock 1

			Thus Making the lock status as FREE
			======================================================================
			======================================================================

			______________________________________________________________
			Server 3:
			______________________________________________________________
			aludra.usc.edu(45): nachos -m 2 -s -T3 3

			Forking MailBox 1 thread

			Forking MailBox 0 thread

			Server Thread for MailBox # 1 Started
			Server Waiting to receive

			Server Started
			Server Waiting to receive
			Got "#alock1,3348668698" from 1, box 0

			I don't have the Lock lock1, return a No to machine 1 and mailbox 0

			 ack1: !alock1,3348668698
			Server Waiting to receive
			Got "block1" from 3, box 0

			Forking The Server Ping Thread
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 1
			Server Waiting to receive
			Got "!block1" from 0, box 1

			In handle no response for msg lock1
			Server Waiting to receive
			Got "$block1,1" from 1, box 1
			Sent "block1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ecv1,3348687770" from 0, box 0

			I don't have the CV cv1, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#fcv1" from 1, box 0

			I don't have the CV cv1, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#xlock1,3,0" from 0, box 0

			I don't have the Lock lock1, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "block1" from 4, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 1
			Server Waiting to receive
			Got "!block1" from 0, box 1

			In handle no response for msg lock1
			Server Waiting to receive
			Got "$block1,1" from 1, box 1
			Sent "block1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#gcv1" from 1, box 0

			I don't have the CV cv1, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "#ylock1,4,0" from 0, box 0

			I don't have the Lock lock1, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "clock1" from 4, box 0

			I dnt have the lock so forward message

			 Release - Key = clock1

			Acquired pend req lock

			I dnt have the lock so forward message - 2
			Server Machine 2 MailBox 0 Sending DYH Message #clock1 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #clock1 to machine id = 1
			Server Waiting to receive
			Got "!clock1" from 0, box 1

			In handle no response for msg lock1
			Server Waiting to receive
			Got "$clock1,1" from 1, box 1
			Sent "clock1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block1" from 0, box 0

			I don't have the Lock lock1, return a No to machine 0 and mailbox 0

			 ack1: !block1
			Server Waiting to receive
			Got "#jmv1,0,3351257758" from 1, box 0

			I don't have the MV mv1, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "alock2" from 5, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #alock2,3351267647 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #alock2,3351267647 to machine id = 1
			Server Waiting to receive
			Got "!alock2,3351267647" from 0, box 1

			In handle no response for msg lock2,3351267647
			Server Waiting to receive
			Got "!alock2,3351267647" from 1, box 1

			In handle no response for msg lock2,3351267647

			Creating Lock lock2
			Lock lock2 created for Machine ID 2 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block2" from 0, box 0

			I have the Lock lock2, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "block2" from 5, box 0
			Free Lock lock2 Found for Machine ID 5 and mailBox 0
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ecv2,3351287639" from 1, box 0

			I don't have the CV cv2, return a No to machine 1 and mailbox 0
			Server Waiting to receive
			Got "fcv2,lock2" from 5, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #fcv2 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #fcv2 to machine id = 1
			Server Waiting to receive
			Got "!fcv2" from 0, box 1

			In handle no response for msg cv2
			Server Waiting to receive
			Got "$fcv2,1" from 1, box 1
			Sent "fcv2,lock2" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#xlock2,5,0" from 1, box 0

			I have the Lock lock2, return LockID to machine 1 and mailBox 0
			Server Waiting to receive
			Got "clock2,*" from 5, box 0
			Lock lock2 Released by Machine ID 5 + mailBox 0 and setting lock Free as Lock wait queue empty
			Server Waiting to receive
			Got "alock2" from 6, box 0
			Lock lock2 already Created, return LockID to machine 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#block2" from 0, box 0

			I have the Lock lock2, return LockID to machine 0 and mailBox 0
			Server Waiting to receive
			Got "block2" from 6, box 0
			Free Lock lock2 Found for Machine ID 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#clock2" from 1, box 0

			I have the Lock lock2, return LockID to machine 1 and mailBox 0
			Server Waiting to receive
			Got "clock2" from 6, box 0
			Lock lock2 Released by Machine ID 6 + mailBox 0 and setting lock Free as Lock wait queue empty
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "block1" from 6, box 0
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 0
			Server Machine 2 MailBox 0 Sending DYH Message #block1 to machine id = 1
			Server Waiting to receive
			Got "!block1" from 0, box 1

			In handle no response for msg lock1
			Server Waiting to receive
			Got "$block1,1" from 1, box 1
			Sent "block1" to outPktHdr.to: 1,outMailHdr.to: 0
			Server Waiting to receive
			Got "#jmv1,0,3363097617" from 0, box 0

			I don't have the MV mv1, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#alock2,3363107582" from 1, box 0

			I have the Lock lock2, return LockID to machine 1 and mailBox 0
			Server Waiting to receive
			Got "block2" from 6, box 0
			Free Lock lock2 Found for Machine ID 6 and mailBox 0
			Sent "1" to outPktHdr.to: 6,outMailHdr.to: 0
			Server Waiting to receive
			Got "#ecv2,3363127543" from 0, box 0

			I don't have the CV cv2, return a No to machine 0 and mailbox 0
			Server Waiting to receive
			Got "#ylock2,6,0" from 1, box 0

			I have the Lock lock2, return LockID to machine 1 and mailBox 0
			Server Waiting to receive
			Got "block2" from 5, box 0
			Lock lock2 Busy so put Machine ID 5 + mailBox 0 to wait queue
			Server Waiting to receive
			Sent "ping" to outPktHdr.to: 6,outMailHdr.to: 39

			Client with Machine Id [ 6 ] has died

			The client who died owned a lock

			There is a server waiting to acquire this lock

			Making the machine [ 5 ] as the new Lock Owner
			Sent "1" to outPktHdr.to: 5,outMailHdr.to: 0
			Sent "ping" to outPktHdr.to: 5,outMailHdr.to: 39

			Client with Machine Id [ 5 ] has died

			The client who died owned a lock

			No Client(s) are waiting to acquire Lock 1

			Thus Making the lock status as FREE
			==============================================================================
			==============================================================================
			_______________________________________________________
			pingtest1 - Client 1
			_______________________________________________________
			aludra.usc.edu(12): nachos -m 3 -x ../test/pingTest1 -T3 3

			User Program 1

			Creating Lock - lock1

			Client Pinger

			Machine 3 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 3 and mailBox 0 received message "1" from 1, box 1

			Acquiring lock1

			Machine 3 and mailBox 0 sent request message block1 to the server Machine 2 Machine 3 and mailBox 0 received message "1" from 1, box 0

			Creating Condition Variable cv1

			Machine 3 and mailBox 0 sent request message ecv1 to the server Machine 0 Machine 3 and mailBox 0 received message "1" from 0, box 1

			Calling Wait on cv1

			---- Please Start the program pingTest2 and pingTest3 in two different windows ----

			Machine 3 and mailBox 0 sent request message fcv1,lock1 to the server Machine 1 Machine 3 and mailBox 0 received message "1" from 1, box 0

			Got Signal from User Program 2 & User Program 3

			User Program 1 Exiting without releasing lock1

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 17391159, idle 17390260, system 750, user 149
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 4, sent 4

			Cleaning up...
			aludra.usc.edu(13):
			_______________________________________________________
			pingtest2 - Client 2
			_______________________________________________________
			aludra.usc.edu(11): nachos -m 4 -x ../test/pingTest2 -T3 3

			User Program 2

			Creating Lock - lock 1

			Client Pinger

			Machine 4 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 4 and mailBox 0 received message "1" from 1, box 0
			Acquiring lock1

			Machine 4 and mailBox 0 sent request message block1 to the server Machine 2 Machine 4 and mailBox 0 received message "1" from 1, box 0

			Acquired lock1

			Creating Condition Variable cv1

			Machine 4 and mailBox 0 sent request message ecv1 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 0, box 0
			Signaling User Program 1

			Machine 4 and mailBox 0 sent request message gcv1,lock1 to the server Machine 1 Machine 4 and mailBox 0 received message "1" from 0, box 0

			Signalling on cv1 with lock1
			Release lock 1

			Machine 4 and mailBox 0 sent request message clock1 to the server Machine 2 Machine 4 and mailBox 0 received message "1" from 1, box 0

			Released Lock
			Acquiring Lock1

			Machine 4 and mailBox 0 sent request message block1 to the server Machine 0 Machine 4 and mailBox 0 received message "1" from 1, box 3

			Acquired Lock

			User Program 2 Exiting without releasing lock 1

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 36340845, idle 36339710, system 930, user 205
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 6, sent 6

			Cleaning up...
			aludra.usc.edu(12):
			_______________________________________________________
			pingtest3 - Client 3
			_______________________________________________________
			aludra.usc.edu(124): nachos -m 5 -x ../test/pingTest3 -T3 3

			User Program 3

			Creating Monitor Variable - mv1

			Client Pinger

			Machine 5 and mailBox 0 sent request message jmv1,0 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Creating Lock - lock2

			Machine 5 and mailBox 0 sent request message alock2 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 1

			Acquiring lock2

			Machine 5 and mailBox 0 sent request message block2 to the server Machine 0 Machine 5 and mailBox 0 received message "1" from 2, box 0

			Creating Condition Variable - cv2

			Machine 5 and mailBox 0 sent request message ecv2 to the server Machine 1 Machine 5 and mailBox 0 received message "1" from 1, box 1

			Calling Wait on cv2

			---- Please Start the program pingTest4 and pingTest5 in two different windows ----

			Machine 5 and mailBox 0 sent request message fcv2,lock2 to the server Machine 2 Machine 5 and mailBox 0 received message "1" from 2, box 3

			User Program 3 Exiting without releasing lock2

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 146665627, idle 146664650, system 830, user 147
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 5, sent 5

			Cleaning up...
			aludra.usc.edu(125):
			_______________________________________________________
			pingtest4 - Client 4
			_______________________________________________________
			aludra.usc.edu(71): nachos -m 6 -x ../test/pingTest4 -T3 3

			User Program 4

			Creating Monitor Variable - mv1

			Client Pinger

			Machine 6 and mailBox 0 sent request message jmv1,0 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Creating Lock - lock2

			Machine 6 and mailBox 0 sent request message alock2 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 2, box 0

			Acquiring lock2

			Machine 6 and mailBox 0 sent request message block2 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 2, box 0

			Releasing Lock lock2

			Machine 6 and mailBox 0 sent request message clock2 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 2, box 0

			User Program 4 Exiting

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 32925, idle 32080, system 730, user 115
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 4, sent 4

			Cleaning up...
			aludra.usc.edu(72):
			_______________________________________________________
			pingtest5 - Client 5
			_______________________________________________________
			aludra.usc.edu(52): nachos -m 6 -x ../test/pingTest5 -T3 3

			User Program 5

			Creating Lock - lock 1

			Client Pinger

			Machine 6 and mailBox 0 sent request message alock1 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Acquiring lock1

			Machine 6 and mailBox 0 sent request message block1 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Creating Monitor Variable - mv2

			Machine 6 and mailBox 0 sent request message jmv1,0 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 0, box 0

			Creating Lock - lock 2

			Machine 6 and mailBox 0 sent request message alock2 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Acquiring lock2

			Machine 6 and mailBox 0 sent request message block2 to the server Machine 2 Machine 6 and mailBox 0 received message "1" from 2, box 0

			Creating Condition Variable - cv2

			Machine 6 and mailBox 0 sent request message ecv2 to the server Machine 0 Machine 6 and mailBox 0 received message "1" from 0, box 0
			Signaling User Program 3

			Machine 6 and mailBox 0 sent request message gcv2,lock2 to the server Machine 1 Machine 6 and mailBox 0 received message "1" from 1, box 0

			Signalling on cv2 with lock2

			User Program 5 Exiting without releasing lock1 & lock2

			 main is the last thread in ALL the processes - Thus Halting the System
			Machine halting!

			Ticks: total 48047, idle 46820, system 1030, user 197
			Disk I/O: reads 0, writes 0
			Console I/O: reads 0, writes 0
			Paging: faults 0
			Network I/O: packets received 7, sent 7

			Cleaning up...
			aludra.usc.edu(53):
__________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


----------------------------------------------------------
----------------------------------------------------------
***********************************************************************************************************************************************************
VI. Discussion:
***********************************************************************************************************************************************************

-----------------
Parts 1
-----------------

+ Experiment expectation. 
	All the resources requested by the client programs which are entities of the Movie Stimulation are utilized in mutually exclusive way. And the movie stimulation gets over with all entities exiting.
	Two movies must be stimulated.

+ User Program Level Expectation:
	All the entities request the resource to single available server and server handles all the request according to the design of messages for request and handles the client with the respecive reply message.

+ Experiment result.
	All the entities exited normally and 2 movie stimulations were observed to take place with 30 customers and minimum slot of 25 customers in one movie stimulation.

+ Explanation
	The implementation of networkking/distributed systems helped us implement sharing of resource, but with sharing it is also important to mututally exclusive access is provided to the movie stimulation client entities.
	All resources perfectly handled locks, CVs, and MVs. And signals/wait and broadcast were also seen working positively thus finally fulfilling the movie stimulation requirements.

-----------------
Parts 2
-----------------
+ Experiment expectation. 
	All servers managed to handle client requests on MB0 and also handles the DYH requests to mutually handle the resource requests by clients.
	Two movie stimulation were stimulated with all entities ending without any error/issue.

+ User Program Level Expectation:
	The Create Requests were handled using the timestamp and as there were many entities requesting to all servers speedily and randomly, the timestamp was seen acheiving the criteria of overcoming the problem of two servers creating the same resource.
	Also, the negative+positive acknowledgements were handled on MailBox 1 and respective decision was taken. for any positive acknowledgement the request was forwarded to that server.


+ Experiment result.
	Two movie stimulation was stimulated in the many servers- many clients scenario.

+ Explanation
	The implementation of networkking/distributed systems helped us implement sharing of resource which is located on different number of servers, but with sharing it is also important to mututally exclusive access is provided to the movie stimulation client entities.
	All resources perfectly handled locks, CVs, and MVs. And signals/wait and broadcast were also seen working positively thus finally fulfilling the movie stimulation requirements.

---------------------------
	Part 3 - Extra Credit
---------------------------

+ Experiment expectation.  (What you hope will happen.)
	We implemented a new thread in the client and server. The client side thread is responsible only for replying to the server its status (alive/ dead). Thus if dead the server gets no replies. The server side thread pings the clients, that own a resource that the server maintains, after regular intervals to check if they are alive.
	If the server gets a positive response from the client then that means that the client is alive and the server does nothing. However if the server detects that the client, that owned a resource that it maintains, has died then it checks if there is any other client in the wait queue of acquiring the resource.
	If there is a client then, the resource ownership is given to that client (the client at the start of the wait queue). If there are no clients waiting to acquire the resource, the server makes the resource as FREE. By this the server makes sure that resources are utilized properly and even if a client does not release a resource and dies, the server makes sure that the resource is made avaliable to others.
	
+ User Program Level Expectation:
	Our Expected results were seen in the test cases and all the implementations were cross checked for all the conditional and parameter checking for the messages received from client machine to server machine. The scenario was verified by making clients acquire a resource but not release it and call exit. The server was seen to handle the resource allocation as expected.
	
+ Experiment result.
	The output received in the test cases were the expected results for the design this scenario.

+ Explanation
	The implementation of this scenario was done by implementing a new thread in the existing client server mechanism. This thread was used only for the communication between the client and server to determine any dead cleints.

***********************************************************************************************************************************************************
VII. Anything else:
***********************************************************************************************************************************************************
+ It was confident feeling to design the distributed system and feeling of achievement by implementing the distributed servers providing support to varied number of clients.
Though this project had lots of work converting movie simulation code and it took a lot of the time in converting the movie stimulation code to distributed system design.

+ The implementation of the movie sim over distributed network was achieved using the network system calls provided by nachos and the design and modules necessary for a full functional distributed platform was experienced.
 